(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    393038,       7487]
NotebookOptionsPosition[    392097,       7453]
NotebookOutlinePosition[    392440,       7468]
CellTagsIndexPosition[    392397,       7465]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6808275247858686`*^9, 3.6808275257552986`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", "[", "t_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"i", ",", "j"}], "]"}], "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"slnn", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"i", ",", "j"}], "]"}], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"basis", ":", "a1a2"}], ",", "a1b2", ",", "b1a2", ",", "b1b2"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"inity", "=", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", 
         RowBox[{"-", "I"}], 
         RowBox[{"-", "I"}], 
         RowBox[{"-", "1"}]},
        {"I", "1", "1", 
         RowBox[{"-", "I"}]},
        {"I", "1", "1", 
         RowBox[{"-", "I"}]},
        {
         RowBox[{"-", "1"}], "I", "I", "1"}
       }], ")"}], "/", "4"}]}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"e1", "-", "ig1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"e2", "-", "ig2"}], ")"}]}], "*)"}], ";", 
   RowBox[{"initx", "=", 
    RowBox[{
     RowBox[{"1", "/", "4"}], 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"e1", "+", "g1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"e2", "+", "g2"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "1", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     }], ")"}]}], 
  RowBox[{"(*", "e1g2", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init1", "=", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"0", "0", "0", "0"},
        {"0", "1", "0", "1"},
        {"0", "0", "0", "0"},
        {"0", "1", "0", "1"}
       }], ")"}], "/", "2"}]}], ";", 
   RowBox[{"initi", "=", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"0", "0", "0", "0"},
        {"0", "1", "0", "I"},
        {"0", "0", "0", "0"},
        {"0", 
         RowBox[{"-", "I"}], "0", "1"}
       }], ")"}], "/", "2"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"e1", "-", "ig1"}], ")"}], "g2"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"init1e", "=", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "0", "1", "0"},
        {"0", "0", "0", "0"},
        {"1", "0", "1", "0"},
        {"0", "0", "0", "0"}
       }], ")"}], "/", "2"}]}], ";", 
   RowBox[{"initie", "=", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"1", "0", "I", "0"},
        {"0", "0", "0", "0"},
        {
         RowBox[{"-", "I"}], "0", "1", "0"},
        {"0", "0", "0", "0"}
       }], ")"}], "/", "2"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"e1", "-", "ig1"}], ")"}], "e2"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initetg", "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", "0", "1"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"1", "0", "0", "1"}
      }], ")"}], "/", "2"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"e1e2", "+", "g1g2"}], "*)"}], 
  RowBox[{"initetg2", "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "1", "1", "0"},
       {"0", "1", "1", "0"},
       {"0", "0", "0", "0"}
      }], ")"}], "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initth", "=", 
   RowBox[{
    RowBox[{"(", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", "1"}
      }], ")"}], "/", "4"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"e1g2", "+", "g1e2"}], "*)"}], 
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"i", "-", "j"}], ")"}], "di"}]}], ";", 
  RowBox[{"\[Lambda]0", "=", "1"}], ";", 
  RowBox[{"k0", "=", 
   RowBox[{"2", 
    RowBox[{"Pi", "/", "\[Lambda]0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"di", "=", 
   RowBox[{"x", " ", "\[Lambda]0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]1p", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "1", "0"},
      {"0", "0", "0", "1"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]1m", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"1", "0", "0", "0"},
      {"0", "1", "0", "0"}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]2p", "=", 
   RowBox[{"(", GridBox[{
      {"0", "1", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "0", "1"},
      {"0", "0", "0", "0"}
     }], ")"}]}], ";", 
  RowBox[{"\[Sigma]2m", "=", 
   RowBox[{"(", GridBox[{
      {"0", "0", "0", "0"},
      {"1", "0", "0", "0"},
      {"0", "0", "0", "0"},
      {"0", "0", "1", "0"}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "1"}], 
  RowBox[{"(*", 
   RowBox[{
    SuperscriptBox["\[Omega]0", "3"], " ", 
    FractionBox[
     SuperscriptBox["\[Mu]", "2"], 
     RowBox[{"3", " ", "Pi", " ", "8.85", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "12"}]], "*", "1.05", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "34"}]], " ", 
      RowBox[{"c", "^", "3"}]}]]}], "*)"}], ";", 
  RowBox[{"\[Theta]", "=", 
   RowBox[{"Pi", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "k_", "]"}], ":=", 
   RowBox[{
    FractionBox["3", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ")"}], 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", "di"}], "]"}], 
        RowBox[{"k", " ", "di"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"3", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{"k", " ", "di"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"k", " ", "di"}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", "di"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"k", " ", "di"}], ")"}], "3"]]}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"G", "[", 
     RowBox[{"k_", ",", "R_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["3", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ")"}], 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "R"}], "]"}], 
         RowBox[{"k", " ", "R"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"3", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Cos", "[", 
            RowBox[{"k", " ", "R"}], "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"k", " ", "R"}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"k", " ", "R"}], "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"k", " ", "R"}], ")"}], "3"]]}], ")"}]}]}], ")"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[CapitalLambda]p", "[", 
     RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
    RowBox[{
     FractionBox["\[Gamma]", 
      RowBox[{"2", "Pi", " ", 
       SuperscriptBox["\[Omega]0", "3"]}]], 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Omega]", "3"], 
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"\[Omega]", ",", "i", ",", "j"}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{"\[Omega]", "-", "\[Omega]0"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", 
         RowBox[{"-", 
          SuperscriptBox["10", "30"]}], ",", 
         SuperscriptBox["10", "30"]}], "}"}], ",", 
       RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalLambda]12", "=", 
   RowBox[{
    FractionBox["3", "4"], "\[Gamma]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"k0", " ", "di"}], "]"}], 
        RowBox[{"k0", " ", "di"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"3", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{"k0", " ", "di"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"k0", " ", "di"}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{"k0", " ", "di"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"k0", " ", "di"}], ")"}], "3"]]}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalLambda]21", "=", 
   RowBox[{
    FractionBox["3", "4"], "\[Gamma]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], ")"}]}], 
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{"k0", " ", "di"}], "]"}], 
        RowBox[{"k0", " ", "di"}]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"3", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{"k0", " ", "di"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"k0", " ", "di"}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{"k0", " ", "di"}], "]"}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"k0", " ", "di"}], ")"}], "3"]]}], ")"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rr", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sh", "=", 
   RowBox[{"Sinh", "[", "rr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch", "=", 
   RowBox[{"Cosh", "[", "rr", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]12", "=", 
   RowBox[{"F", "[", "k0", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", "=", 
    RowBox[{"100", 
     RowBox[{"Pi", "/", "k0"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[CapitalLambda]p21", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "Pi", " ", 
        RowBox[{"\[Omega]0", "^", "3"}]}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"2", "I", " ", "k0", " ", 
        RowBox[{"(", "R", ")"}]}], "]"}], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"x", "^", "2"}], 
           SqrtBox[
            RowBox[{"x", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "\[Omega]0"}], "-", "x"}], ")"}]}]]}], 
          RowBox[{
           RowBox[{"-", "\[Omega]0"}], "+", "x"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"x", "-", "\[Omega]0"}], ",", "1", ",", "0"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"2", "\[Omega]0"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "30"}], ",", 
        RowBox[{"Method", "\[Rule]", "PrincipalValue"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\[Omega]0"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]}]}], ";", 
    RowBox[{"\[CapitalLambda]p12", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "Pi", " ", 
        RowBox[{"\[Omega]0", "^", "3"}]}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"2", "I", " ", "k0", " ", 
        RowBox[{"(", "R", ")"}]}], "]"}], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"x", "^", "2"}], 
           SqrtBox[
            RowBox[{"x", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "\[Omega]0"}], "-", "x"}], ")"}]}]]}], 
          RowBox[{
           RowBox[{"-", "\[Omega]0"}], "+", "x"}]], 
         RowBox[{"F", "[", 
          RowBox[{
           RowBox[{"x", "-", "\[Omega]0"}], ",", "1", ",", "0"}], "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"2", "\[Omega]0"}]}], "}"}], ",", 
        RowBox[{"AccuracyGoal", "\[Rule]", "30"}], ",", 
        RowBox[{"Method", "\[Rule]", "PrincipalValue"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\[Omega]0"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalLambda]p11", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "Pi", " ", 
        RowBox[{"\[Omega]0", "^", "3"}]}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"2", "I", " ", "k0", " ", 
        RowBox[{"(", "R", ")"}]}], "]"}], 
      RowBox[{"F", "[", 
       RowBox[{"\[Omega]0", ",", "1", ",", "0"}], "]"}], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"x", "^", "2"}], 
          SqrtBox[
           RowBox[{"x", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "\[Omega]0"}], "-", "x"}], ")"}]}]]}], 
         RowBox[{
          RowBox[{"-", "\[Omega]0"}], "+", "x"}]], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"2", "\[Omega]0"}]}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", "PrincipalValue"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\[Omega]0"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalLambda]p22", "=", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "Pi", " ", 
        RowBox[{"\[Omega]0", "^", "3"}]}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"2", "I", " ", "k0", " ", 
        RowBox[{"(", "R", ")"}]}], "]"}], 
      RowBox[{"F", "[", 
       RowBox[{"\[Omega]0", ",", "1", ",", "0"}], "]"}], 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"x", "^", "2"}], 
          SqrtBox[
           RowBox[{"x", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "\[Omega]0"}], "-", "x"}], ")"}]}]]}], 
         RowBox[{
          RowBox[{"-", "\[Omega]0"}], "+", "x"}]], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"2", "\[Omega]0"}]}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", "PrincipalValue"}], ",", 
        RowBox[{"Exclusions", "\[Rule]", "\[Omega]0"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "40"}]}], "]"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalLambda]p21", "=", 
   RowBox[{"\[CapitalLambda]p12", "=", 
    RowBox[{"\[CapitalLambda]p11", "=", 
     RowBox[{"\[CapitalLambda]p22", "=", "0"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]p12", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "k0", " ", "2", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]p21", "=", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", "k0", " ", "2", "R"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]p11", "=", 
   RowBox[{"\[Gamma]12", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "k0", " ", "2", 
      RowBox[{"(", "R", ")"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]p22", "=", 
   RowBox[{"\[Gamma]12", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "k0", " ", "2", 
      RowBox[{"(", "R", ")"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6790745671686926`*^9, 3.679074581919871*^9}, {
   3.679074717774658*^9, 3.679074730728834*^9}, {3.6790747926401587`*^9, 
   3.6790748358467655`*^9}, {3.679076761406744*^9, 3.6790767816895943`*^9}, {
   3.679076854148664*^9, 3.679076882322831*^9}, 3.679076912544038*^9, {
   3.679086148349496*^9, 3.6790862220742426`*^9}, {3.6790862570614643`*^9, 
   3.6790862587491007`*^9}, {3.6807950134781857`*^9, 3.680795130335655*^9}, {
   3.680795291138137*^9, 3.680795312801695*^9}, {3.680795398775544*^9, 
   3.680795425755962*^9}, {3.6807954711192207`*^9, 3.6807956043036785`*^9}, {
   3.680795752552131*^9, 3.6807958548221817`*^9}, {3.6807958851133165`*^9, 
   3.6807959623589354`*^9}, {3.6807959978720284`*^9, 
   3.6807960561082487`*^9}, {3.6807962339490824`*^9, 3.680796249327179*^9}, {
   3.6807986855617123`*^9, 3.6807988894590845`*^9}, 3.680801091077104*^9, {
   3.680801123831659*^9, 3.6808012323540287`*^9}, {3.68080127347331*^9, 
   3.680801340830377*^9}, {3.6808014199546957`*^9, 3.6808015274368896`*^9}, {
   3.680822665942437*^9, 3.6808227712875586`*^9}, {3.6808228806686983`*^9, 
   3.6808228855725317`*^9}, 3.6808231712871904`*^9, {3.680823235901001*^9, 
   3.6808232370858746`*^9}, {3.6808269990010967`*^9, 3.680827000016264*^9}, {
   3.68082711466245*^9, 3.680827124819068*^9}, {3.6808271743569655`*^9, 
   3.6808271907816505`*^9}, 3.6808272209176674`*^9, {3.6808273106577835`*^9, 
   3.6808273256093717`*^9}, 3.6808275168837547`*^9, {3.680865473618563*^9, 
   3.6808656131529336`*^9}, {3.680865711717847*^9, 3.680865767505097*^9}, {
   3.6808658434920645`*^9, 3.6808658460672708`*^9}, {3.6808658762871847`*^9, 
   3.680865900633788*^9}, {3.680866412868538*^9, 3.6808664737291603`*^9}, {
   3.6808682690571356`*^9, 3.6808683084178104`*^9}, {3.6808726643163824`*^9, 
   3.6808726874233856`*^9}, {3.6808727333997507`*^9, 
   3.6808727741619835`*^9}, {3.68113520613552*^9, 3.6811352515143166`*^9}, {
   3.681135282278735*^9, 3.6811352905133357`*^9}, {3.681135585129054*^9, 
   3.6811355918628035`*^9}, {3.6833992906327686`*^9, 3.683399336335674*^9}, {
   3.6833993880807343`*^9, 3.683399406838054*^9}, {3.683399481909727*^9, 
   3.6833995163361635`*^9}, 3.683399657277384*^9, {3.6833997093669224`*^9, 
   3.6833997217841787`*^9}, {3.683399856154182*^9, 3.683399874910433*^9}, {
   3.6834019928700523`*^9, 3.6834020178837814`*^9}, {3.6834034257956347`*^9, 
   3.683403426898141*^9}, {3.683403541482831*^9, 3.6834035438866262`*^9}, {
   3.683403733143674*^9, 3.683403734543437*^9}, {3.683403789811204*^9, 
   3.6834037924132137`*^9}, {3.6834038388482533`*^9, 
   3.6834038405343723`*^9}, {3.683404057334711*^9, 3.683404057765765*^9}, {
   3.683404810868455*^9, 3.683404861466281*^9}, {3.6834085465156927`*^9, 
   3.683408552106289*^9}, {3.683408689767658*^9, 3.6834086912050114`*^9}, {
   3.683408749816538*^9, 3.683408777023527*^9}, {3.683411946557504*^9, 
   3.6834119469423494`*^9}, {3.683411977758131*^9, 3.683411980023591*^9}, {
   3.6834120694772434`*^9, 3.6834120766169233`*^9}, {3.683470359924119*^9, 
   3.6834703853486958`*^9}, {3.6834708500293303`*^9, 
   3.6834708560148973`*^9}, {3.6834709098296576`*^9, 3.683470911205016*^9}, {
   3.683470992849556*^9, 3.6834710012098303`*^9}, {3.6834712030589447`*^9, 
   3.6834712032152157`*^9}, {3.6834712676198115`*^9, 3.6834712700732*^9}, {
   3.6834713035034103`*^9, 3.683471310753677*^9}, {3.6834713506091657`*^9, 
   3.6834713565318704`*^9}, {3.683471779011921*^9, 3.6834717809034567`*^9}, {
   3.6835492255656586`*^9, 3.6835492283219614`*^9}, {3.683549764173069*^9, 
   3.683549771999856*^9}, {3.6835498474407988`*^9, 3.683549850160591*^9}, {
   3.68354991361686*^9, 3.6835499145177364`*^9}, {3.6835501520961604`*^9, 
   3.6835501686280737`*^9}, {3.683550304660684*^9, 3.6835503055083246`*^9}, {
   3.683550380039624*^9, 3.6835503809027123`*^9}, {3.6835504146483393`*^9, 
   3.683550417252531*^9}, {3.683550505978654*^9, 3.6835505128651204`*^9}, {
   3.683558753932678*^9, 3.683558773061056*^9}, {3.683558820483818*^9, 
   3.6835588277795906`*^9}, {3.683559367677411*^9, 3.6835593723214464`*^9}, {
   3.683559436557644*^9, 3.683559477944415*^9}, {3.683560207993427*^9, 
   3.6835602081625195`*^9}, {3.6835602876409426`*^9, 
   3.6835603065158343`*^9}, {3.683560380549245*^9, 3.6835603944513845`*^9}, {
   3.683560847714651*^9, 3.683560849179622*^9}, {3.6835609894711795`*^9, 
   3.683561035677188*^9}, {3.683561287951029*^9, 3.6835613694425535`*^9}, {
   3.6835643502062845`*^9, 3.6835643668751917`*^9}, {3.683582480847554*^9, 
   3.6835825045138607`*^9}, {3.6835825378782682`*^9, 
   3.6835826127241564`*^9}, {3.6835840476197205`*^9, 3.683584049138074*^9}, {
   3.683584598480553*^9, 3.68358460113027*^9}, {3.6835851730933647`*^9, 
   3.683585197074489*^9}, 3.683996049547744*^9, 3.6839961791718426`*^9, {
   3.68399629288581*^9, 3.683996308307293*^9}, 3.683998960032505*^9, 
   3.684002042497336*^9, 3.6840021192322636`*^9, 3.6840678247306194`*^9, {
   3.6840767823588767`*^9, 3.684076807795251*^9}, 3.684077272453126*^9, 
   3.684077998105793*^9, 3.6840781157829027`*^9, {3.6840805962070694`*^9, 
   3.6840806512610426`*^9}, {3.6840807170593204`*^9, 
   3.6840809008156385`*^9}, {3.684081146298293*^9, 3.6840811464294157`*^9}, {
   3.6840813763427215`*^9, 3.684081410590212*^9}, {3.684081442557613*^9, 
   3.684081442774416*^9}, {3.6841868438691187`*^9, 3.684186932906605*^9}, {
   3.6842551024816017`*^9, 3.6842551367639627`*^9}, {3.684255201805092*^9, 
   3.684255208197427*^9}, {3.6842552492842464`*^9, 3.68425526658823*^9}, {
   3.684255305275169*^9, 3.6842553088846493`*^9}, {3.684255503459832*^9, 
   3.6842555079844513`*^9}, {3.684255646768306*^9, 3.684255734123207*^9}, {
   3.684449007178124*^9, 3.684449123301429*^9}, {3.684449169907937*^9, 
   3.684449190304103*^9}, 3.684449282853672*^9, {3.684449389641938*^9, 
   3.684449396407544*^9}, {3.684513396390892*^9, 3.684513399695704*^9}, 
   3.684514763726593*^9, 3.684520580893437*^9, 3.6845298763899813`*^9, 
   3.6845933320630293`*^9, {3.684593374750298*^9, 3.6845933754197454`*^9}, {
   3.6853793776732903`*^9, 3.6853793899453645`*^9}, {3.685897772465285*^9, 
   3.685897785850705*^9}, {3.6859021196900797`*^9, 3.6859021356636558`*^9}, 
   3.685914788440172*^9, 3.6859179597951727`*^9, {3.6859950550989723`*^9, 
   3.6859950557685966`*^9}, {3.685996806789073*^9, 3.6859968293275433`*^9}, {
   3.6860564418550677`*^9, 3.6860564429712048`*^9}, {3.6860664519433093`*^9, 
   3.686066454878599*^9}, {3.686074114100024*^9, 3.686074114331337*^9}, {
   3.686074518635106*^9, 3.6860745187671804`*^9}, {3.6866773802482643`*^9, 
   3.686677388654013*^9}, {3.6884839439940634`*^9, 3.688484008372473*^9}, {
   3.6884840475535707`*^9, 3.6884840531086535`*^9}, {3.688484744999127*^9, 
   3.6884847455179167`*^9}, {3.6884849281745896`*^9, 
   3.6884849335144424`*^9}, {3.6884849790564346`*^9, 
   3.6884850276318784`*^9}, {3.6884850751336107`*^9, 3.6884851443848467`*^9}, 
   3.688485226667221*^9, {3.68848530631194*^9, 3.688485353687484*^9}, {
   3.688488120298571*^9, 3.6884881420787106`*^9}, {3.6884894267173624`*^9, 
   3.6884894275491705`*^9}, {3.688490444432555*^9, 3.688490456410784*^9}, {
   3.688490700746133*^9, 3.6884907015000076`*^9}, {3.6884908695308557`*^9, 
   3.6884908762372255`*^9}, 3.689279467188384*^9, {3.689280072981585*^9, 
   3.6892800738622055`*^9}, 3.689280324459583*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"4", " ", "sln", " ", "to", " ", "4", " ", "init"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SQ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "sh"}], " ", "ch", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], "\[Gamma]p21"}], "+", 
              RowBox[{"I", " ", "\[CapitalLambda]p21"}]}], ")"}], 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"\[Sigma]2p", ".", "\[Sigma]1p", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", " ", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
               "\[Sigma]1p"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], "\[Gamma]p12"}], "+", 
              RowBox[{"I", " ", "\[CapitalLambda]p12"}]}], ")"}], 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"\[Sigma]1p", ".", "\[Sigma]2p", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", " ", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
               "\[Sigma]2p"}]}], ")"}]}]}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], "\[Gamma]p21"}], "-", 
              RowBox[{"I", " ", "\[CapitalLambda]p21"}]}], ")"}], 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"\[Sigma]2m", ".", "\[Sigma]1m", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", " ", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
               "\[Sigma]1m"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], "\[Gamma]p12"}], "-", 
              RowBox[{"I", " ", "\[CapitalLambda]p12"}]}], ")"}], 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{"\[Sigma]1m", ".", "\[Sigma]2m", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", " ", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
               "\[Sigma]2m"}]}], ")"}]}]}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "\[Gamma]p21"}], "+", 
              RowBox[{"2", "I", " ", "\[CapitalLambda]p21"}]}], ")"}], " ", 
            RowBox[{"\[Sigma]2p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "\[Gamma]p12"}], "+", 
              RowBox[{"2", "I", " ", "\[CapitalLambda]p12"}]}], ")"}], " ", 
            RowBox[{"\[Sigma]1p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]p11", "+", 
              RowBox[{"2", "I", " ", "\[CapitalLambda]p11"}]}], ")"}], 
            RowBox[{"\[Sigma]1p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "\[Gamma]p22"}], "+", 
              RowBox[{"2", "I", " ", "\[CapitalLambda]p22"}]}], ")"}], " ", 
            RowBox[{"\[Sigma]2p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}]}], 
          ")"}], "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "\[Gamma]p12"}], " ", "-", 
              RowBox[{"2", "I", " ", "\[CapitalLambda]p12"}]}], ")"}], 
            RowBox[{"\[Sigma]1m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "\[Gamma]p21"}], "-", 
              RowBox[{"2", "I", " ", "\[CapitalLambda]p21"}]}], ")"}], " ", 
            RowBox[{"\[Sigma]2m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Gamma]p11", "-", 
              RowBox[{"2", "I", " ", "\[CapitalLambda]p11"}]}], ")"}], 
            RowBox[{"\[Sigma]1m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "\[Gamma]p22"}], "-", 
              RowBox[{"2", "I", " ", "\[CapitalLambda]p11"}]}], ")"}], " ", 
            RowBox[{"\[Sigma]2m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}]}], 
          ")"}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"1", "/", "2"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"sh", "^", "2"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
            "\[Sigma]1m"}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
             "\[Sigma]2m"}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
             "\[Sigma]1m"}]}], "+", 
           RowBox[{
            RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
            "\[Sigma]2m"}]}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Sigma]1p", ".", "\[Sigma]1m", ".", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
           RowBox[{"\[Sigma]2p", ".", "\[Sigma]2m", ".", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sigma]1m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}], "+", 
            RowBox[{"\[Gamma]12", " ", 
             RowBox[{"\[Sigma]1m", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], "+", 
            RowBox[{"\[Gamma]12", " ", 
             RowBox[{"\[Sigma]2m", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}]}], "+", 
            RowBox[{"\[Sigma]2m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", 
       RowBox[{"sh", "^", "2"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
            "\[Sigma]1p"}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
             "\[Sigma]2p"}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
             "\[Sigma]1p"}]}], "+", 
           RowBox[{
            RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
            "\[Sigma]2p"}]}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Sigma]1m", ".", "\[Sigma]1p", ".", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{"\[Sigma]1m", ".", "\[Sigma]2p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{"\[Sigma]2m", ".", "\[Sigma]1p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
           RowBox[{"\[Sigma]2m", ".", "\[Sigma]2p", ".", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sigma]1p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}], "+", 
            RowBox[{"\[Gamma]12", " ", 
             RowBox[{"\[Sigma]1p", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}], "+", 
            RowBox[{"\[Gamma]12", " ", 
             RowBox[{"\[Sigma]2p", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}]}], "+", 
            RowBox[{"\[Sigma]2p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"I", " ", "\[CapitalLambda]21", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
          RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", " ", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
          "\[Sigma]2m"}]}], ")"}]}], "-", 
      RowBox[{"I", " ", "\[CapitalLambda]21", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
          RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
          "\[Sigma]1m"}]}], ")"}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsq", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "SQ"}], ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "init"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsqx", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "SQ"}], " ", 
         ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "initx"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsqy", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "SQ"}], " ", 
         ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "inity"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsq1", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "SQ"}], " ", 
         ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "init1"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsqetg", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "SQ"}], ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "initetg"}]}], "}"}],
        ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsqetg2", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "SQ"}], ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "initetg2"}]}], 
        "}"}], ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsqth2", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "SQ"}], ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "initth"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsqi", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "SQ"}], " ", 
         ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "initi"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TH", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"sh", "^", "2"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
            "\[Sigma]1m"}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
             "\[Sigma]2m"}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
             "\[Sigma]1m"}]}], "+", 
           RowBox[{
            RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
            "\[Sigma]2m"}]}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Sigma]1p", ".", "\[Sigma]1m", ".", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
           RowBox[{"\[Sigma]2p", ".", "\[Sigma]2m", ".", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sigma]1m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}], "+", 
            RowBox[{"\[Gamma]12", " ", 
             RowBox[{"\[Sigma]1m", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], "+", 
            RowBox[{"\[Gamma]12", " ", 
             RowBox[{"\[Sigma]2m", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}]}], "+", 
            RowBox[{"\[Sigma]2m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", 
       RowBox[{"sh", "^", "2"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
            "\[Sigma]1p"}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
             "\[Sigma]2p"}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
             "\[Sigma]1p"}]}], "+", 
           RowBox[{
            RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
            "\[Sigma]2p"}]}], ")"}], "+", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Sigma]1m", ".", "\[Sigma]1p", ".", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{"\[Sigma]1m", ".", "\[Sigma]2p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
           RowBox[{"\[Gamma]12", " ", 
            RowBox[{"\[Sigma]2m", ".", "\[Sigma]1p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
           RowBox[{"\[Sigma]2m", ".", "\[Sigma]2p", ".", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sigma]1p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}], "+", 
            RowBox[{"\[Gamma]12", " ", 
             RowBox[{"\[Sigma]1p", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}], "+", 
            RowBox[{"\[Gamma]12", " ", 
             RowBox[{"\[Sigma]2p", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}]}], "+", 
            RowBox[{"\[Sigma]2p", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}], 
           ")"}]}]}], ")"}]}], "-", 
      RowBox[{"I", " ", "\[CapitalLambda]21", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
          RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", " ", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
          "\[Sigma]2m"}]}], ")"}]}], "-", 
      RowBox[{"I", " ", "\[CapitalLambda]21", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
          RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
          "\[Sigma]1m"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"th", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", " ", "TH"}], 
         ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "init"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thx", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "TH"}], " ", 
         ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "initx"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thy", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "TH"}], ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "inity"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"th1", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "TH"}], " ", 
         ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "init1"}]}], "}"}], 
       ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thetg", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "TH"}], ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "initetg"}]}], "}"}],
        ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thetg2", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", "TH"}], ",", 
         RowBox[{
          RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "initetg2"}]}], 
        "}"}], ",", "slnn", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]s", "[", "t_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"i", ",", "j"}], "]"}], "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slnns", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"i", ",", "j"}], "]"}], "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"basis", ":", "a1a2"}], ",", "a1b2", ",", "b1a2", ",", "b1b2"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initsx", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"1", "/", "2"}], 
         RowBox[{"1", "/", "2"}]},
        {
         RowBox[{"1", "/", "2"}], 
         RowBox[{"1", "/", "2"}]}
       }], ")"}]}], ";", 
    RowBox[{"initsy", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"1", "/", "2"}], 
         RowBox[{
          RowBox[{"-", "I"}], "/", "2"}]},
        {
         RowBox[{"I", "/", "2"}], 
         RowBox[{"1", "/", "2"}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inits", "=", "initsx"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]ps", "=", 
     RowBox[{"(", GridBox[{
        {"0", "1"},
        {"0", "0"}
       }], ")"}]}], ";", 
    RowBox[{"\[Sigma]ms", "=", 
     RowBox[{"(", GridBox[{
        {"0", "0"},
        {"1", "0"}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsqsx", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]s", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{"sh", " ", "ch", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Sigma]ps", ".", 
               RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ps"}], "+", 
              RowBox[{"\[Sigma]ms", ".", 
               RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ms"}]}], 
             ")"}]}], "-", 
           RowBox[{
            RowBox[{"1", "/", "2"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"sh", "^", "2"}], "+", "1"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ps", ".", 
               "\[Sigma]ms"}], "+", 
              RowBox[{"\[Sigma]ps", ".", "\[Sigma]ms", ".", 
               RowBox[{"\[Rho]s", "[", "t", "]"}]}], "-", 
              RowBox[{"2", 
               RowBox[{"\[Sigma]ms", ".", 
                RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ps"}]}]}], 
             ")"}]}], "-", 
           RowBox[{
            RowBox[{"1", "/", "2"}], " ", 
            RowBox[{"sh", "^", "2"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ms", ".", 
               "\[Sigma]ps"}], "+", 
              RowBox[{"\[Sigma]ms", ".", "\[Sigma]ps", ".", 
               RowBox[{"\[Rho]s", "[", "t", "]"}]}], "-", 
              RowBox[{"2", 
               RowBox[{"\[Sigma]ps", ".", 
                RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ms"}]}]}], 
             " ", ")"}]}]}]}], ",", 
         RowBox[{
          RowBox[{"\[Rho]s", "[", "0", "]"}], "\[Equal]", "initsx"}]}], "}"}],
        ",", "slnns", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsqsy", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Rho]s", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{"sh", " ", "ch", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Sigma]ps", ".", 
               RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ps"}], "+", 
              RowBox[{"\[Sigma]ms", ".", 
               RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ms"}]}], 
             ")"}]}], "-", 
           RowBox[{
            RowBox[{"1", "/", "2"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"sh", "^", "2"}], "+", "1"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ps", ".", 
               "\[Sigma]ms"}], "+", 
              RowBox[{"\[Sigma]ps", ".", "\[Sigma]ms", ".", 
               RowBox[{"\[Rho]s", "[", "t", "]"}]}], "-", 
              RowBox[{"2", 
               RowBox[{"\[Sigma]ms", ".", 
                RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ps"}]}]}], 
             ")"}]}], "-", 
           RowBox[{
            RowBox[{"1", "/", "2"}], " ", 
            RowBox[{"sh", "^", "2"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ms", ".", 
               "\[Sigma]ps"}], "+", 
              RowBox[{"\[Sigma]ms", ".", "\[Sigma]ps", ".", 
               RowBox[{"\[Rho]s", "[", "t", "]"}]}], "-", 
              RowBox[{"2", 
               RowBox[{"\[Sigma]ps", ".", 
                RowBox[{"\[Rho]s", "[", "t", "]"}], ".", "\[Sigma]ms"}]}]}], 
             " ", ")"}]}]}]}], ",", 
         RowBox[{
          RowBox[{"\[Rho]s", "[", "0", "]"}], "\[Equal]", "initsy"}]}], "}"}],
        ",", "slnns", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "50000"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"solth", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"sh", "^", "2"}], "+", "1"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
                  "\[Sigma]1m"}], "+", 
                 RowBox[{"\[Gamma]12", " ", 
                  RowBox[{
                   RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
                   "\[Sigma]2m"}]}], "+", 
                 RowBox[{"\[Gamma]12", " ", 
                  RowBox[{
                   RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
                   "\[Sigma]1m"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
                  "\[Sigma]2m"}]}], ")"}], "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Sigma]1p", ".", "\[Sigma]1m", ".", 
                  RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
                 RowBox[{"\[Gamma]12", " ", 
                  RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
                   RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
                 RowBox[{"\[Gamma]12", " ", 
                  RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
                   RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
                 RowBox[{"\[Sigma]2p", ".", "\[Sigma]2m", ".", 
                  RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
               RowBox[{"2", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Sigma]1m", ".", 
                   RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}], 
                  "+", 
                  RowBox[{"\[Gamma]12", " ", 
                   RowBox[{"\[Sigma]1m", ".", 
                    RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], 
                  "+", 
                  RowBox[{"\[Gamma]12", " ", 
                   RowBox[{"\[Sigma]2m", ".", 
                    RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}]}], 
                  "+", 
                  RowBox[{"\[Sigma]2m", ".", 
                   RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], 
                 ")"}]}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", 
             RowBox[{"sh", "^", "2"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
                  "\[Sigma]1p"}], "+", 
                 RowBox[{"\[Gamma]12", " ", 
                  RowBox[{
                   RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
                   "\[Sigma]2p"}]}], "+", 
                 RowBox[{"\[Gamma]12", " ", 
                  RowBox[{
                   RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
                   "\[Sigma]1p"}]}], "+", 
                 RowBox[{
                  RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
                  "\[Sigma]2p"}]}], ")"}], "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Sigma]1m", ".", "\[Sigma]1p", ".", 
                  RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
                 RowBox[{"\[Gamma]12", " ", 
                  RowBox[{"\[Sigma]1m", ".", "\[Sigma]2p", ".", 
                   RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
                 RowBox[{"\[Gamma]12", " ", 
                  RowBox[{"\[Sigma]2m", ".", "\[Sigma]1p", ".", 
                   RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
                 RowBox[{"\[Sigma]2m", ".", "\[Sigma]2p", ".", 
                  RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
               RowBox[{"2", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Sigma]1p", ".", 
                   RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}], 
                  "+", 
                  RowBox[{"\[Gamma]12", " ", 
                   RowBox[{"\[Sigma]1p", ".", 
                    RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}], 
                  "+", 
                  RowBox[{"\[Gamma]12", " ", 
                   RowBox[{"\[Sigma]2p", ".", 
                    RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}]}], 
                  "+", 
                  RowBox[{"\[Sigma]2p", ".", 
                   RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}], 
                 ")"}]}]}], ")"}]}], "-", 
            RowBox[{"I", " ", "\[CapitalLambda]21", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", " ", 
               RowBox[{
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
                "\[Sigma]2m"}]}], ")"}]}], "-", 
            RowBox[{"I", " ", "\[CapitalLambda]21", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", 
               RowBox[{
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
                "\[Sigma]1m"}]}], ")"}]}]}]}], " ", ",", 
          RowBox[{
           RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "init"}]}], "}"}], 
        ",", "slnn", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "50000"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "16"}]}], "]"}]}], ";"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6811351299149165`*^9, 3.6811351301309724`*^9}, {
   3.681135301354686*^9, 3.6811353036455965`*^9}, {3.681135334892949*^9, 
   3.681135441864101*^9}, {3.6811355969593115`*^9, 3.6811356446059847`*^9}, {
   3.6833999511677485`*^9, 3.683399988703528*^9}, {3.683400034814097*^9, 
   3.6834003902507467`*^9}, {3.6834005972671576`*^9, 
   3.6834006251011076`*^9}, {3.6834006600533113`*^9, 3.6834006943460712`*^9}, 
   3.683400748276265*^9, {3.683400795087675*^9, 3.6834007960251546`*^9}, {
   3.683401250252476*^9, 3.68340131976733*^9}, {3.683401627043909*^9, 
   3.683401628061597*^9}, {3.683402660616768*^9, 3.683402682241973*^9}, {
   3.6834031911209364`*^9, 3.6834031950402336`*^9}, {3.683403243380087*^9, 
   3.6834032475025187`*^9}, {3.6834033905645103`*^9, 
   3.6834033916296062`*^9}, {3.683403457463931*^9, 3.6834034580650835`*^9}, {
   3.683403657122284*^9, 3.6834036760860796`*^9}, {3.683404002953052*^9, 
   3.6834040031696863`*^9}, {3.683404036594178*^9, 3.6834040379443913`*^9}, {
   3.683404073055456*^9, 3.683404077091053*^9}, 3.6834046973584785`*^9, {
   3.6834047973624287`*^9, 3.6834048039718776`*^9}, {3.6834090079567842`*^9, 
   3.683409025432206*^9}, 3.683409422895655*^9, {3.683411991478737*^9, 
   3.683411991680134*^9}, {3.6834120275977583`*^9, 3.6834120399595127`*^9}, {
   3.6834121028730288`*^9, 3.6834121263252573`*^9}, {3.6834123046164265`*^9, 
   3.6834123063027706`*^9}, {3.683470877539033*^9, 3.6834708795079637`*^9}, {
   3.683471597936473*^9, 3.683471630511071*^9}, {3.6834718054177527`*^9, 
   3.6834718073867145`*^9}, {3.6834718450658116`*^9, 3.68347187190285*^9}, {
   3.683471903073229*^9, 3.68347190866716*^9}, {3.683471959378971*^9, 
   3.6834719714114156`*^9}, 3.6835492373126507`*^9, {3.6835496495100293`*^9, 
   3.683549653048097*^9}, {3.6835497966413965`*^9, 3.6835497968102365`*^9}, {
   3.683549862081086*^9, 3.68354988314875*^9}, {3.683550262404998*^9, 
   3.683550265746775*^9}, {3.6835503671415653`*^9, 3.6835503729096766`*^9}, 
   3.6835504414073696`*^9, {3.6835591362502995`*^9, 3.6835591555967445`*^9}, {
   3.6835591905409765`*^9, 3.6835592819241433`*^9}, {3.6835603133127594`*^9, 
   3.6835603315735188`*^9}, {3.6835603681291122`*^9, 3.6835603745246806`*^9}, 
   3.683560766001367*^9, {3.6835611058215904`*^9, 3.683561124311425*^9}, {
   3.683561179149747*^9, 3.683561179412799*^9}, {3.683564587061947*^9, 
   3.6835646153808146`*^9}, {3.6835647855281954`*^9, 
   3.6835647859436493`*^9}, {3.6835826732288294`*^9, 
   3.6835827564180417`*^9}, {3.6835833394600506`*^9, 
   3.6835833795172987`*^9}, {3.6835834475816736`*^9, 3.683583480272189*^9}, 
   3.6835840696660967`*^9, {3.6839960232467904`*^9, 3.6839960272897654`*^9}, 
   3.6839962365290565`*^9, {3.683998024903665*^9, 3.6839980347980633`*^9}, {
   3.6839985968556833`*^9, 3.6839986375848985`*^9}, {3.683998923614334*^9, 
   3.6839989280693927`*^9}, 3.6839989740816545`*^9, {3.6840019039757366`*^9, 
   3.6840019138983755`*^9}, {3.684002082869357*^9, 3.684002127058997*^9}, {
   3.6840021638831296`*^9, 3.684002168121359*^9}, {3.684067809925541*^9, 
   3.684067812312933*^9}, {3.6840771600340195`*^9, 3.6840771734801364`*^9}, {
   3.68407720441271*^9, 3.6840772053449817`*^9}, 3.684077243617005*^9, {
   3.684077378743924*^9, 3.6840773894885645`*^9}, {3.6840810275931206`*^9, 
   3.684081027755643*^9}, {3.6841854890292645`*^9, 3.6841855021657915`*^9}, 
   3.684186941020299*^9, {3.684511795785491*^9, 3.684511805338238*^9}, {
   3.6845119014034095`*^9, 3.684511908899387*^9}, {3.684513411429184*^9, 
   3.6845135377786856`*^9}, {3.6845144804965467`*^9, 
   3.6845144931783705`*^9}, {3.6845147322957535`*^9, 3.684514742320261*^9}, {
   3.684519906631154*^9, 3.684519922047145*^9}, {3.685996912496933*^9, 
   3.6859969213496475`*^9}, 3.6884838997890315`*^9, 3.6884840819225454`*^9, {
   3.6884847826498857`*^9, 3.6884847863404856`*^9}, {3.688490472443782*^9, 
   3.6884904950222144`*^9}, {3.689280185049161*^9, 3.6892801914938836`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solth", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], 
          RowBox[{"(", 
           RowBox[{"sh", "+", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
               "\[Sigma]1m"}], "+", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
               "\[Sigma]2m"}], "+", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
               "\[Sigma]1m"}], "+", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
               "\[Sigma]2m"}]}], ")"}], "+", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Sigma]1p", ".", "\[Sigma]1m", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
              RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
              RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
              RowBox[{"\[Sigma]2p", ".", "\[Sigma]2m", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sigma]1m", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}], "+", 
               RowBox[{"\[Sigma]1m", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}], "+", 
               RowBox[{"\[Sigma]2m", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}], "+", 
               RowBox[{"\[Sigma]2m", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"1", "/", "2"}], " ", "sh", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
               "\[Sigma]1p"}], "+", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m", ".", 
               "\[Sigma]2p"}], "+", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
               "\[Sigma]1p"}], "+", 
              RowBox[{
               RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m", ".", 
               "\[Sigma]2p"}]}], ")"}], "+", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Sigma]1m", ".", "\[Sigma]1p", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
              RowBox[{"\[Sigma]1m", ".", "\[Sigma]2p", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
              RowBox[{"\[Sigma]2m", ".", "\[Sigma]1p", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
              RowBox[{"\[Sigma]2m", ".", "\[Sigma]2p", ".", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sigma]1p", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}], "+", 
               RowBox[{"\[Sigma]1p", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}], "+", 
               RowBox[{"\[Sigma]2p", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1m"}], "+", 
               RowBox[{"\[Sigma]2p", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2m"}]}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"I", " ", "\[CapitalLambda]21", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
             "\[Sigma]2m"}]}], ")"}]}], "-", 
         RowBox[{"I", " ", "\[CapitalLambda]21", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
             RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
             "\[Sigma]1m"}]}], ")"}]}]}]}], " ", ",", 
       RowBox[{
        RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "init"}]}], "}"}], ",",
      "slnn", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6834020682131515`*^9, 3.6834020782656574`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "[", "t", "]"}], "/.", "solth"}], 
      "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"4", ",", "4"}], "]"}], "[", "t", "]"}], "/.", "solth"}], 
      "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", "solth"}], 
      "]"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "[", "t", "]"}], "/.", "solth"}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"3", ",", "3"}], "]"}], "[", "t", "]"}], "/.", "solth"}], 
       "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"4", ",", "4"}], "]"}], "[", "t", "]"}], "/.", "solth"}], 
       "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", "solth"}], 
       "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}], "[", "t", "]"}], "/.", "solth"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<ud\>\"", ",", "\"\<dd\>\"", ",", "\"\<uu\>\"", ",", "\"\<du\>\"", 
      ",", "\"\<sum\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6834021159911175`*^9, 3.6834022055598884`*^9}, {
  3.6834022635340343`*^9, 3.6834022977657766`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
TXPY0bNUDH+Rovk60TEpaT/85TwVR0pUf+65RMdHqWldnktUeCkOW4wQW8sE
PLd1pWJ/t7u692U6RGRFJos8qHjdO/1okrhWLu7gGh8qzis/fGDqTIffBo33
7n5U3M4+vfsFsaZCxULjPSpo/oGVNcQ/Fc3MVB9SsStYXaePOG7jQGJgOBVc
W97lMYlPq7hz9UdS8bNa2qaaWGgTp/Wul1Qs+hF/PJq48r+n2dFvqHi0wq74
KPHNLfKC0/FU/H3hW/mbjGereqbjkS9UPOeXeeJDPLzVoPRzKhXVrZcPjZP5
vNZoluDOpqLn4mOxg8RmmvZXzxVQsUM7Z20YiQef1nRNYSkVmwqW+ReReJXu
DFgvUUmF2Nk3ri0knp4Q8XGrI/GKyRJoI/HetCuO3kClQp116W45WY/+3Rqb
VFqpEP04NhNF1uuIvlk3k0nF4RsjrkvIemYL/lfXO0jFK4/6P8nnSH50c+X1
jFKBkVWDRiQfxr1ynnZNU5E2KRhjSPLl5L5w/86/VDzx35X1L5+KVl907WCn
YVS0vY39NB0hSZLG7bw0CGB3h/NJOqa9p3a28dMwWHmL76EZHZaG9Uqtq2kw
OCg2+MyUDhWW77JmKRoyVDW0fUzoqJboy29Uo6GdK6LWex8dakN5Hxu20+A/
P56xai8dURmPn1G0aXiWdyk4muwnBxODa3UGNHK/c83xBB2cAR+Uq8xp6Hr7
SdFbjQ7dCefoYj8ajoyOL3wTJ/lUuD+w6B4NxqMGXldF6BAMXudeGEwD9eeV
SsFVdPTI047kP6Vhbd69dwp8ZD1Pa/BkkzqrSnVrL1hoQt63eY8kKg0jSv/t
L+5qwtaYoOMxsk2IFgiKvRXVhMQiHw8exSZI6AlW+D9uglLvlahrqk3Yo8r5
+9ajJkitN+801GzCgpW981lSD3k+brSbOdSEe8mVaCT1syuj5pqJVxMM3r+h
Rxo0IahuxWOOhiYs8/jGHvqThqU/F2deojdBT35jzaphMm+B6ZbW9iZkTsnF
RfbTcO1Y15okVhP+hJnded1Gg1Vb4luLv00oafgTWlBGw1bW4bR0eVJXzNno
J56ROM2HUe196Bi5lDT6QJ8G3uH6IDc/Oizm687Qd5HzqGX5Hv97dBxIscpb
v5OGkJS7SbFhpA5eOV1G30KDjr1XcMd7Oqa8XXfelabhFcXa4Gg92afvJ912
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
omFaxLewE7Z3fK86FdLQNK06cJHaCaWz3dvCyX7dr//Cf+9cJ5Yfk09XyiD5
sGyrxSu2LpTtivl8kNQD6rDElOTiLmQvG9Z1SqPhVvqQohhnFxTNR2/EknrS
sc8/dKVAF1Lq5f1ZX2h4ejnvzF+5LvzYtlWo+z3pL/KV2OhGXaiotn/3O4L0
UYZSqYHGXaDGMe59CKehtk3IXvtIFzgH/KwsST18OPO37q1ZF1QfvlIuCiHz
U69/6WpDvMpV+lIQWa+PrhDw6ELV/utat0l9ln2W5230pgsvlp18tMiBhiUK
yZsXve+CU+vklcf2ZL0z3vWnxnfhZYumuRKp9+9pDw9KfOnCh2A272Nnyfry
W0t+z+rCin2C6R/J+bEpYGl+QF0XREZNMq4coWHntUN/S/50QfLn0bdfST80
6TDgte9vF2J+Dj15qEVDoqXvn9qFLnCdbV95gpxXMvtSplo4uvFb5mD+Dw1S
jyWEx8f4urFs9t1aNdLnUos6+sXXdYMycCtMQImG4HS3c6/kukFbdXX7lAIN
ez+sZK6X70ZTuNdPhjwN2eG7u/9T7saNGv3MpPWkPti9a9u7rRv6Oyz9rsjQ
cGG5U/2VA90QVMlytRWjYT37skMzRt2IYf3OviRKQ+fkyxpv426I9V319RIh
+6WLUnnvWDf04v+8e0b6co0U9bKXlt14rav2Z0qA1JcTf7OqrnRjNsQ4dgvp
6/ONHmscvtaNEtcIfzseGtx2q2Y0uXejI9Fg+wtuGoaUzqR23+jG2gPPxYW4
aKifL/08dbcbHhmumjJLaYh+cz92XXQ3VEdd2KrYaLDcs0Wr80U3Pn3SviBF
LNPTQn32qhtxe20tPBaoiFu7YanA+24wF400qZN+MvVZkT1bcjcMDlHNWsh9
wm27/aLc1G5cee0pfYBYs5nvmVtGN4rzSm8U/iH381XmVaO5ZD577KfTSP9Z
HTKpzPjajSBNO6nqKSoeqj4vf1rZjTm61YeTxCa1eyyP1pDfZ0TVDk+S/orn
UUhVQzeaC4RbxYmjErYp3KV1Y1jeszCT9K+n93UU7W7uRucxqx0niJn+ShNZ
jG70X/8z9OYXFe/lGoKudnWjIKNujTGxQ6m77H+93Zjf5tg9P0HFj0Xlx+IG
urE9cJuwHXFKzIVRm+/dmIm+d1eK+BoE764dJfG4xvRjjFPx97pV5uOJbqjU
WUpbExeKLztsMtmN5MT6bAViv+xPg8tnuiEhqEX/9ZOKvSeO3vo22w25tj1X
Soi5p/+I3Znvxt2Re0ERxDWPX6XoLOrBnEqihCNxiLqB4dziHuzwM1unS3yE
OsrMWNoDtgbZaCni1Vciblzh6sHiv+m32Yhb+LVWq/L24O9gYlMvue9FJ/Z8
HuLrQfyN1EeVxJaH7u19x9+DwmibpFRimVHVrjNCPfijZLX5NXHf/Sb3NcI9
EFhpyB9GHKd0g79FtAdFyt/23yV2rFyXEC7Rg4LzHm3exCrnK3cbr+1Bc9to
gQfxz2XObTwyPfBxvDfhRpz6Ttj1q2wP9GTpl/997qaXz3t7Qw86Shw3//u9
JvPsW23FHswsa9vsT/z3Fo/2n4092Pc588Ij4kLp5KY01R7ccH3a+pL4dqHZ
JefNPdgrwueWRKxvubBMWb0HZsc/aZUTc82/jRnY1gPrMa71HcTV0Ybb32j2
QOhFhvIM8cMdExTLnT2Qlt5/UJjEy6Q10kFcpwfbtx67pUG8ykNnMX13D/ii
LpSaEzcLs6JC9XpgvFx2hR/x6WNqNVwHetC9sjiujdhK3Cgm06gHya3nOXjI
ep/pPnfFzrgHZ+Qztu4kPnvxiWjZsR5c8XbjSCA+tyVx+IpZDxSVIkOZxLYz
FQUyp3oQpJ/YLk3y6/ydP+duWvVggl8i8A2xwwHB7ao2PTC0Xds1SHyBfyNv
x7ke/Ha+Sv+P5K/Tc4vkHY4knlPXHn4jdk0rnJ+82oPgbHMHYbI/rnm1UN66
92Cs7NZKZ2K3XeNvjnr1IGlVukwNsWfNugPJN8n65I1evE/2m0+f/5OLQT3Q
ooiVryf7M3CV0SZmTA86ebozS+aouN92bnFYbA9K7F776/yl4sEr76Zd73rw
tlFWr4A4RDnx+ssPPUjJPXy1mNSHCD3BbyfTe7CpuTOrg9STmKstZyhVPbj4
N+W23RJy/tPOheVP9iBkzVYrH9J/hCxa9x9meqB7W/C55EoaHJS7agtmST7o
J8XkE0veOcldxNaLfVeDu9hIPfRXO+Rbwt0LjfSfNx8I0WAapnGpQrIXRnWp
e4tIfZ0y5jnQoN+LwKm/XGdlyX3tesWAyT7y+/8OcKyQo+Fj3B3/xgO9uOsl
8jOL2IqNrZhq3AufUyfurdhAQ8WXXxr0k70wWfBemkXq/1O+jvXtTr0QFFld
v6BCw/bqRPb+x714YZPAq076I4nXXtnRkb0o+A7dLmI2d32XI9G9EDl04Gmg
Jnneuvbuwle9eH3snnc7OY9MvZYVRX3sxUk57leu2jS4KJ72OVzcC6fTYorO
e8jnbArbOMt6sYFvwoVHl7yvaWI0/2sv/jNM8X5DzHbr3umNNb2YiuSradAj
53NL6s5lzb2wCVKuWGtA5hfAM5c70guK8FJjN0MS39NNKVd+9KJy6HHiLPEV
tVeOihO9cDT/G+xtRINm19a2J9O9uGC6IcvnIA3ftllnuyxmoknn98VLxuR5
y5VdFJYyceONhj2LOKR3SqGLk4mTEtwVFofJ/fHhg0gjPibcb2/5qGdCzvf+
THd5USZyK98mLTpK7re5tzd1ijOxPcL79gXiT6EHByIkmbi/uiyWRuyqzTy+
WJYJw91a314fI/3a4xXbOlSY2Fuq6yV/nNwv9Wx/h+kyEf56v3DXCRrab9Lc
JPYyYRTl1aFwkqxPru6fN/uYeMDsXuVCzK+2biHtIBMzDxsb/xKzr+vibDZj
wnFPyl12c3J+nj4UZHWKidcvuStB7PUsf/mgBROMATYvL+Jf/M8F/lgzUaAg
Iz9K3Md2UkLiIhMfMl8kFFrQ8Frr24s3l5i4V3/U4ifxaXcNaWUXJmTenLgh
Re4rTWOr12u7MZE1lcPhSRyq5B9X7sFERXDkhTfEh+x+Kx66zkTrtrndNcQV
HY2qVr5MLAqq0xazJPdlsT3JA7fJfJ8tnNMm1jFNVnP2Z0L27pYFK+KsmpDt
t4KY0CiWC3pFfI2LLZc7mMT3WqxPAfFmvUvaYSFMbGmIHWwjTsg12vMmggle
ow/SK0n/bTudW7bxKRPnKc4/NxCvU9tokPaMjLdiu6Y2cdelqMqdz5nI6euZ
MyGO/sBtVP6SCZU2Q01bYjOWR93B10xQTh2fcCMWWjd4mP6GiXOf2+UDiOtP
m1Et3zMRbc3W/pj4wbOvpgPxTCw0h/C9Id7ftLXl8kcmrJ86FH8hXirw7tTM
ZyYiNzjMZBEXG63q8E1iwmv5hbRiYu97flbcqUy01RtOfyPWLJvoCU0n6z09
UFJHPMVmc048iwk7njViVOJUrQZWbA4T2iFlc03El913OWzMZ6JvecHFZuKN
qYnDqYVM/MfT7/TPA2NrL+0sYWKaT5idTvxG6eHPsjImlseoKPx73hm7+SsH
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
TjqiExUWjTH/Y3nO3Z1lh/4f0OvIFg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV1Hc8Vf8fB3Ajor3IijSMjBQa6utVFBIqI3yTzEISMkLjKyNZCSm+MhKV
ZCVkj8u957j2DNlSN9x+kW9R+h1/ncfzcR7n8zjv8fpI2lw1tOfi4ODYwsnB
sfTUtf/UWvXZRJ0jw/z4sJmP+kT2WZtBYRWcjRbblb7LFIIrOyPfCB+D78aw
c+xNl6B4cFP6E2FjDGi0hoqxvKDWopwbLWyHU4bjlz48DEbVv7WqEcIeYBW3
frL49hAB/mHXQ4UDwXx69eymimeoELtYeLYkEL0skfa50+n4UXRkdtu5IDAc
1gqQI+lwnv5+tTQxGDvz/x7V5X4O43NWlyYl7uGt9n3Pqf0vIaWqetZAKhLX
7o/IX3R7DTsPtvA94VhoyPi4fXucD2XuaN9811hU/j43sK0nH1zRKn199FhI
/eGu6xR8g+Qcn0RFr4cwGdNcS49+Q/0Ht0RHWxw2/06InAkswClroR0S4fE4
kaP54YRRIcS/lgTqjMYjIWswQzCsEJO3zo+7qSXgaN6ioGdNIUITn2bQPiUg
6SScWbuLQOuWl3U6nojrzSkezTzFUDM4qvh2MQlvivXNjyS9A9+H0cgBk2T0
6Vr8jGh+h+7Lwezlr5PR+/hjii9HCUpo9mavFVKgEZi6TsW6BGYjmcIc/SkI
0ztmd1i8FNFbVBPTDzyFwIDw9hN3y8AXeyL16/+e4dqpiYE9IpVYODC8kCqS
jpOxsd371Csx/eH6WSPNdIyk6p6dt65Eu/SLlYWx6Sid9GmteFGJpFJeL7/9
GQgOO/o4XbgKKqO1urw3n4M2I+VwJakKVnvVZ0X5MtFIvFrjEV0No+5Og0al
TKzPlZZtTqmG1o0rL2+ZZ8Ltnv3NdTnVkKtPtBzOzATNKzVOq6Eac+YLjAz9
VzBnkulBXDUI9y9+sicmC4TEm6/ezjUoatmrrS2eg71J7/1sd9ci8vOkjrxW
DmrK1OfT1Gpxkeu57nqXHMRFrmS1HK+FoIqoQV95Dtgr/8v+eq4WpQ3+mUWK
uTgnVF538m4tRHc75Z1sykUOM+RBZG8ter+rVV5bnY+HNfaSch40aHEJHbko
mQ9LOxOlQzdpyF/zvcpMNR8mrnsqDwXTECqdU/PX+Xy02F9pWPOYBjXz7fXL
X+fDuXZ5wp8SGuLLVjb+q/cGv5IvTG5fpMEsoL+3NqwACQJVb+V967BuSEr+
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
pu3wbHP1n8D/bPjVxV5T+e/otDXc8QmPTWO4vSmzjaoecNE+wU93T1QN5XwT
Ac2Dbp/B1hAjlmeTSGsMeDKygQVlRq+OOuXwPQsWyQIslD9iS4Ky10N3MQsh
FtzVnOaXrHPe+t/OLSwIPI9+eZTy9KR6PEOGBYMPpRzHKR9YNR+brc6CeEVj
9EnKjbqu4b5OLEj/7tQxo/wf3cJvQw0LzcxHG1wpixtpedbQWLjwi6NuyVoD
u6+601l4WzXl5UY5bpbLto3JwjpLo/fulFUkX+pGd7PAo2P22JOyu+934Q1T
LGwrj/njS3lSPrJ4vdAXHOoQ9wyiPPSg8vs6ly/Q812zJp7yXOsh4TtrJlHR
usPsHWXX2G1VPmWTsDsYNN5FeXPjtnVjllPwootJT1M26sz6JbY4BU5Tz0DO
HOp+vJDq3J85DX3/j8c3Uq60yglao8eGvOWjo5KUS5qdTw4YsHEwZN53yYXq
u9Znn2HDrF25YMlZYumJ+qZstGjLSm2jnNCT8Cbcho123u182yl7ng4eXuHD
RmGEM20HZbkj5/9ansHGTM92CRnKUjki3N0v2HgzHGi05G3iPYyMV2zkFVXe
XbLQL0NjrTw2pA7WspfMW6xzOaiMDWbQsgpZysO7VeK529kIHbtrJEe5P+l/
lu2dbBxziw5acs/qnB1pPWy887tetOSmL7K5GgNsNHp2i8hTLnsuQff/zMaV
b6ODSy4W/BB+ZpKNVKvGdQqU3wQlGEqy2eDZHnN0yZm2AgNVs2zc4S94uuT0
tra0qP/YULRa277klKNRjlbzbOx11eZWpJyYq79b6TcbXYYWykt+JLHy+58/
bNhJGtgu+f+wXPGj
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV1nc4Vm8YB3CREqmIsqIkWrT4pcJXlFCUVVSkRFRGkaShRbKSVUYiI2TL
yHoP7/AmIjLKXiXJm0JF9Hv8da7Pda7zXOc5z33u+7vqlLOxLTcXF5f6HC6u
2au+7eA76ouZBpdyvuGFTleNz5mHT3WJK8M0YcLcScEYywSagvLE92B8XO/Y
P5FTUNohkvRE3BSaIdkycd8vYGf9tuwQ8dM4a81ruDz1FqhoukqguBv0TJ7q
nJB+COUGj5w1xy5By532T1s6BKl8SorlMe5onz6+ZrVUKEIuPZbjyFxBe7Np
RLdQOGwOOi41kr8BJVaUDnPgMe7c8vfwE7+LtWEBKtricSiXsis4XHwXEiNU
w8j9OPwu1ByTPeaNuHLp+Pw/cTg/Mu5cEuODxqh9jOjmeJgesz4zLHMfYjOD
pZPeCZBXUTlsKB+EJcEC5ldLk3HajSN+XzwMK5c+3RQbmo5tPCGeuS5h4BLP
Xyv/Ix3cIcptbVVhsNj8fFX7wQw8zboSo+QejuMKmqs+8GXi4xCPzPuGCDAf
8w7tu5CFgyfF5GQCIsErn12evygH0t+L7+r2RWL9PJVlddtzMHzDcuDCzijk
uqyMDLDOgV/Ms2TGYBS6lFQ3/MrOAaNl47qze2NgO36U9dQgFzsNdyvlz8TC
X6VmuNc9D3wdfUGdZk/R3apJexSVh5ZzPpz5GU+RMW1h+rcsD8UMW/MMxTjs
ys8708LzEua9aeJc7XE4tgeHPvu/RMgKlZgk1WfwybUfmw7MB1+YXvz30URo
aBsV7LIqxJRqz1S8RBLeTjquMrtciJEOj8Mm2klQqru0eEdwIRoVUgQKwpKw
OrhW8lRFIWJL5rlf3Z6MjbQDfntWFUG5j64/7/pzVHdFWiW1FEHB91hSYdJz
rKWfin70rQgSij//2b99juC9U9lHeV7hn7ts/huZFPx4LTdkqvQK1fy3ZB5W
psDqaCi/3O1XsN6qMSbJlwZuNyudq6uKYdLSZFi7OQ3BTStUk5WLoXPNMfWG
RRo6mTeSn+8rxgZWjFVPWhqgYaO7ybEYExZT7GSDF2AezLc8WlCMgFtFT7aQ
czbePjfMdncJCuu37tsnnYU7kiVyNmqlCPoyrLtRJwtCF7sb0/RLYcf9XF/I
KQujIom+jealWKYsadhWloUE1VuTbLdSlLy5lVaolA05t1q6/otSSG46m7P/
bTbWmZmXdwiXwWfXvq0avdkwDD/cYSRThh/75PI2T2TjlIRMatqGMlRbd74U
lc6Bt8EDBYE9ZfAMMS7qcszBdO26gkDXMnwc30lzFczF02q9CWZtGXS4xTTt
VuViQ6xR2pPWMuQuGqfMVXIRFi+sb9lXBj+FrEp1y1yEeGznC/9dhp0Wq1nz
M3JxPXDY/+uqckSWCtRGH8iDe5egkKVLOczvtH+kk7rYWSZ64u50OZZ0y288
E/8SHpJe5tbzaHitduE6f+FLVKV/M5BfTMPOCd6VRr0v8XNB6YjLShokHTbZ
dqrmQzm0zHSeFg2dhrc5vwfy4blw77DFLRoiXtRoxkzlI6o/zu+rLw0H+ZaH
QKgAj/nWTTsE00BVvFD2USuAwd1bgkpPaYhXbrqyNLQAgaZ33FpKaDgtsXau
kmYhDi6Oqn83SoPU5Ytm78wKMb84r0b7Nw1NjaXJbucKQT37KZU0Q4NOoJFe
SUQhIi03ronmpaDAdTVI91shDgWrHXkjRGFooFbMJqoIJk6M1YVrKTjnuCo+
HnsF4U/vkzcbURhR62l8zVeM3qdhV8xNKJxnG3pOSRUjC+K1nmYU7LvWVVnt
LQbbe41clgUFa8Fu6zURxai8qtrQcpLCIYcDYbnbS7CxKuvP1gsU3o692tm/
vwSNrDPL+VwpHLip0CNqXYKbUe02rW4UdB9xK13xLUHQ7085Zz0oaDKLqvCh
BMc+D2ge8aKwedWaqRrPUqgsulpsHkAhMz0kfiaoFA32j+0GAilsVOXS3ZxQ
irpNKm2ODyisPdgWFvqmFIzH/loXQyisvP5Q6ahUGTiSiXz6jykIfZg++bms
DBLBC9rVEigEnz7HJ95QhnoX8TV+iRQWfW/N1P9UBlF3r/LGJAr8819OZSwq
h4CRMM/xFArcKmfD3U6U48mxluzdGRR+BDez58yhQYAmLGRfQKH0fA76l9Hg
4HJNOLyQwj3dgALWRhoeVs41KC+iIMWllehvToN8mXEIbwmFvc4ZXqLZNKw0
7N5vT6NQI68VHbaJwpI2nyLvKgo5YVnN3jspnJ6o0/FkU4jgXiF8eS8FycT+
0HOvKZzs/OVrcYxCnu3ne3veUJgIz3CXvkchNFw/qf4t2T+vuHFKJwWtaU85
8yYKvK4+gZFfyHu7b10i1Uzqofsn22+M7DtcWqmDOL/0LRz5K8AqL5E40kpB
3+2u4tb/KjD4WsJpfRuFTb2j9qt3VyDJ3vdZK7HIoROJIgcqoJfuoX63nULX
hp2Sv05WwFuWr6Kxg4JbH4evNLACpk4JGabdFCyMLPdkPK6AZ60Xc4RYg1bt
FZtQgXZxdzefHgoLopMmbr4iz+cMZ2b2Uog1Pta/d6AClNVz1b5+CuwKFq1O
rRI919wf9wxSSK752x+4rxK75XxSzMi+vFu28h8wrsQ9o4/FVcRa32JN2Wcq
EcFp/pM0RM5H7PIXKqQS9ZtrHfYPU4hanbHI60klLi08JZJNfEWpb5t6SiVy
kl0/C3+j8N+egzdelVXinPopsUbibGeFpbmDlcCcCmkNDoUgT0tVl5+V+Nv5
wCeM2NE71FJpphK6bO8dX4jXR/97nraUDp7+XSGB3ykkslrUEjToWG9f51M5
SuH2O8FTJ/XoCN/WWy7wg5xnu/Y9GVM6It/x25gQS//IehftQEez8sxMB/Hj
Fb52YWF0/LURHu3+ScF9bbm/8VM6BIM9xleQczTbNpa9JI2O+9/y71oQC+tZ
TwXQ6Lh+VMSkhjjATTXYe4iO/zYcEokfp3DWyylfe5yOSwN3mhqI9fwSP87h
YuCpQq86zwSFeXFL1twQZSDXsFTImvjmm8FX7poMlLntWMP/i4JVs3SX8n4G
NEuWem0hVu8xnfvTjIGxY6bRR4gnJyhD53MMHInoUogjbp3zy1XRnayvpBxb
SVy4UDHy600G9ltq9vURu8lG9p2JYOCtvu+A7G8Kxop1fPLxDKxxYadoEm9R
5VXqf8FA52+2jiXxiMEFD+sKBjzmiMiEEteaP38iXcNAy+dTJ9KJ0206Ktub
GYic8fRhEDtc0RO0GGZAw29x+ChxmqSQpdUEAzIaX2V5/1AYLmtNt+FiQs5e
grWc2Inb/oCTCBP9qkvNdhJnJ26KcZVmonh641594lGdX1891jIR6bDTxILY
zd/H/44aE6kX69+5ERcoGrb56jDxUzFV5xbxrzrRDUGHmLhSI9obQKx6scMz
9CgT+pYayY+IPUWSqh+fZsKFox8eT1xScF4i1omJyYc2OWnEf82VzyZ4kPVM
sv/mEmtMTb1Kuc2Ewx6LK8XEXk/oCzIDmMgwvrOugpiCv0VeBLlvrri4ipi7
1zi1KI6JeWkaG2uIte9K/ClLY4LLNfZ2PfFd+V5d+ksmmjq3ibwnZrFTH7PL
meAW/9TbTDz/3IXBWjYTPAYx31uJdQV3qDY2MHEkWR0fif2yuHxb28n+DuXU
z7rGiN3S8YmJz+6dybMWHHug0PedCZm96fQPxIYRRy4PTjIR82nOutn1glVl
qr7NZaHDh9XaRPzu46dlPxexYGnU876BWPh6pt1vMRZiLuyQqSM2lXEvmJZl
IbM0/1U1cXiF+jweRRZ84uWTmcTNNryH+baz0PRh1ycasdi82iTB3SwcGH12
9RWxRUrYuPB+FqJdF9jPfs8o/eN7xcxYcBmWypj93u3Dq8NXnGDh+me/A8+I
Vzz42i/rQO5/59KNJI5r9LyreJ2F6qMlFt7EvZe03m+9x0Jw41FXT+LVYvxy
qg9Z+OtbxHEiTj4eSddKYsG79fTyw8SfZ6yX6maxMMdvEUuXeG38WhuDVyz0
JW/snK23FwOF3Oa1LNhsUzZaMVuf97yMLVtYEL0qniVIrLR+37NTPeR9ogOv
TZN6znZq3u04zgLvqMD5NuKCX2M3b6+oQncJnRVM/DuytP6eQhWEwm9XXyPe
oXZ3ZeCWKuQeT9CzJy69uZR6tLcKclpjNHXiigVb/6U7ViGh6El+L/k/15pu
LvTzqIJ8w5McNnFwrJKz/Z0q+GdwpDOJrbdt6FodWYV3PetNLxPPHJejRTGq
IFHldISHeGf2Mi9fSTYiXjdvme0vzyZFttvJsyEoEDS/h/SfBXuXcrS3sJEu
K2BfTtz6YfGJfzpsqAZtqLtMfJlnAdwvsmF4rtlqgPSzl4enZmxes7G1MJWe
TvqhVPyfgt3v2fiqWvD9DvGdr7+cZLrY8OzzKz9KbHxzrPPjGBvSIXG75xN/
T/1WbrTyNVKc+BYcJ/1VcbrrBi6/xuByn5xx0q+TExgzEmuq4fiJuXWU9H8X
b9MebKqG+LHF4pXEu87000/vqMaF53JvQojr18+9n2lQjQea9PBtxH9ytJdq
uVfDjqX98SKZLweoSgWHqmoc+LiePUjm0c926lChwxvcaNUdKfhM8s+ysmcm
mTWgW9VWTJP5qFjVXsRaX4fyF/TBfY0U3muajKSO1ENrkalaEYPkM/5zDU2b
G9DtoVIjRfLFm9YjZYuCGrFyvcLVlhcUTHTMe/r730PY+QlNN57Mszj/I3Fy
zUj/NqxTRPJQ90zoe3uvFkwHvlheGExhQK8uYRm9FS63lEKM/Ug9RXZdebfq
I7oOmuWdv0shyZfn/jrPNsy8jv3oS/LZuM3RIbuSdkTrbc5OvUpBYI+Pcc7y
TkyFyfpLkjx3bcnAwp7jXUjX/XDP4BKFheUbuFoMuvEfNfNy4iKZF+4Hp+mT
3YgT+yH0zoVCTGJAwuqYHgS/Nfog40zhhPY2ta7YHnSqBUiIE8v2fngfFd+D
XmM/a2HiFBmFecLPe6CxizE5l/hlVIU9V24PUk42nBlyIv0neEKxo6oH2vdd
VxUQT1+zLor42QPng7v+HiK2MlOuXbC/FzF/Ep+FOpL6lTSIKzLoRWCD1rIg
4pM9tq5nDvWi51FxoC/xacdH4kyzXkx6KPpeJ3bwnrS9ad2Lh4ktaWeI3fKp
mYlLvZCRnkhUI/YTNdjcH9eLsX9mR7+cJ/mqyTa0fKIXtofDYEC8oyab+1NE
H/5dLRrff47ktb1246F7+iGQcMbY+iwFFWWVhy8/9cPmt2BDsgPJVz8CXyd4
D8D7yX8GC4mHtxl5i2/9BGt7sYAb9hTkvyoOzWn8BMM/lr2LiBlylxpcbn3G
f750KuUMhQfvm2yM5Qbh9e2mnTkxx4R6yM0YRKnMUm9R4lwzUe0dF74gQ2ZC
rdWOQkLtnSe9wkO4fMF8+jlxwJap409Fh0DVrlWftXv4RanjYkMYS7x1PZlY
1/JkdNOKIdTte/MvkXhkWCOSvXYIe/7k8T8jVl04GZapMYTEj/d2xBDX6rsE
eJ4dQtrhlN/BxL+qjl8VrhzC0/mqX64SS5voXKpkDMF/2Z79s9bp3OR8sWoI
FvrlGZ7EEWPcNg01QwgdnXK9Qqy8KlU/pGUINuOhvJeJL3qOiwt/G4Lt/TG1
i8TDG4OKhMS+YmrKcdKeuPshbXyJ01eE/SiNO0I88W6X+O1FwxC7YMe/i9gl
TJa6UjoMuy823SuJl9fKLum3+oagbAu9hcQmTel/pWa+wbnNRG7KluTqE/Hn
29NG8EF98txXYpp1lveiAxz8yk3h7yIurju/v9OQA+78Dy2dxAUa64UyjTiQ
er0padbpUkkxBkc4CC/W15x1VGtUXsApDraxVT06iC8d8unhv8LB9HDHSBvx
Bk1L9fnJHNSmPppoJZbPkuBpSeFAsn47e9ay0q3s5BcciLP/RM5a7K+xqU4O
ef5Nr/qs5xXpnvMu5WCXj869FuKeTcqRPI0c6LVhZTNxe+yoVWMTB2Pdoz+b
iFsFs+QSWjlw2MGomvXbr+uytTo5kLjz2nnWpc9lqm594cCl3aTiPXHRso4A
o2EOnNp4I2ad5x1lvIrDgYVzy9lZp9mIdlJjHNj+bRWZdVJDQ0LwLw4q2HxD
jcRxu4MdrCc58Kw/Qpt1TLbBps3THChNM8Nm/UhGYPzfPw48VE3Ozvp/Phcm
vQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwc2Hc81W8bB3CpVEYlJXtvoWEl+VCRJEkSKaMipVTKTEZGovBDQktJoWWV
UsnOXmdwbOccDpK2UdFz9/zl9X6d4/u9x3Vf93Ud2cOnbdy4ubi4Nizk4vr3
18JtpK1sdJ8RF1d9hmzqsc2cZ3aH+0W1cci+L21/93wI89HiCkW3QWL7xcSe
Wnm8Lg0+6adkhauvh+bVrtOF5saVWbdFbcEtG/8+48lWcAmNJv2VdsBEsqDe
5mwrtI2/u+Sq5ITQx04nts23w54jda9cU1xRdGqJhurgIRi0bshLFD2KkuS5
eck+RyC/+c6jylvu4PshesUs3gP8uYvv/pA+jv1Jyo17DL3wQ/hcimKmJ5Ym
67x6utkbveG91+yUvGBQY5ERnuWDI9OZFZW2Z3Bgo4HXtG0AOjQdjA6mnMWZ
oazFDjsvouxmpc410fN4FSBzZvHCcGi3++crOvqg9qJef7BHJHIWa2qU3vJF
wdiYItfEZST6pCp8lg6Af5D2cP6ha+B5sivjsmsgPL/5WybLJyCQyS0hk3kB
4WkJD9Kz/8OR3aeE9igFwz0qraCemYzOSLn40WMhWNu4qOH6jRQo9XkuLLcN
BW+yg9Mnx1Skr5QNc0gJg/i2i+eDV9xCeFisf4xoBNSZee0ckfsolXB/aVcS
gSuxHlvaNTMxXWz8Q84xEk1bTwuW7nyAkxM/T7+5FYWSJV+266Q/hK2jy7Fx
6Svw11g5jxn1GEo6OnZWSnEY9RJc7r2tEC6ty5LFPsShbsNxtZB5RbjpOdY2
fCweQwsLnI3Li7C4reXhe9sEVHzkW/HY/CWCFkXK2af8h6/igvNf+LzG0fOf
Ra+IJsNo2lstRaoMG+YnBhacSYZbj+OezWll4E7U7u7+kIy6zfrUvyvLcfd5
wC1N3+vwEGC9eLGsAl1j86Wp7SmwtCnN+7O8CrtdRRSkr6bhtnyFdN2mWhhY
mWi+mLuDVa3dV2aDWrG4lxXXt+8uvn312aJW1YoOz6jPi57exdrXsqJufG0o
qXKzf6qRAVsBevBkWhvsmbmiXD0ZsLr5Oki+uB2Jkjq3svTv46eUiUzUBBWL
k3fc+/L1AW6t28b7bSMDv/UHf98Ty0JTSNzLDj8GJnr97fZuzYKO4QIrrxcM
UJSz+V4mZyGkpdMtS6sLd97w+F7Qe4jXSyctZ6W7oc2qtOC5+AjN7Opsn4ke
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
PkPDC5pbUukkEwtvKxV6upP/nye/DjNM6Pl9W9PoRuavMdD8/jcTY6u0BtSJ
pSIP8JZzsZB2KW3pKMmHUdq7wyp5WWj9y7/L0ZUGuyT907VSLEg1TFkqkvw6
Zc23s92MhZdb5DcF76GhPah2xGYHC3/4D8+2W9PwJDsyirKTBcmqXU3KxC5c
XBVUaxZWuS583mZFQ+3zH/odB1io0+QoK5P8n7q0T6nHi4U239s2fWY0bGzM
4x5OYeHsugapLEMaJO5fKLmVxsISmbHMGdIfcfmbee+9xcK+p5X8u4lr5XsG
y+6xsN19IOMPuZ/sLiwqv/mEBat7tj5H9GjwVnMK2VPBQqCZAOvoevI5l6re
4moWanv7HerXkffRv0+UfmDhmvKMwDpirktXnNY0sdAh3w3utSS+GUWbF3Wy
0DntuL1Ig8wvmu/P208s/OUxaDqgStbXiV547gsLITdVtOgqNJzTvuep9p2F
my9OCe0lNhjQ7b4xzYLEe6nTe5RpqNM7XOI9n41AHqFaF0XyPAENb1UeNpY/
evLfiAJ5HmtKdWAxGxp2rJ9nie3jr6XtWsqGt8LO9Cvy5H4ffuWvIsqGk8vv
R42yNNS/DV/bL85Gq9q+m67ETxOtRq5LscHv6mk8LUPi14i9f74CGwaJ6g/V
iOenLNPr02Tjh1oU/wMpGmRM3X8mbWNDwWY2e0ychp5Qmp/EdjYoo1ZPM4hT
32779WAHG93GcSb2xILa8n9fWJHxP7QWbxQj/bD8wOJOezZ6KwNSa0TJ/em0
O9bFkY20wRK5K8QX0ksFRg+xEeUWYrSL+Ifg7RW/DrNx6oCBehfpX4e4DkhI
nGLjreDSPh7i+4Z1dx6cZmNPINcMjdQnTv76shrebCwprX74kJj+WVjJyI+N
9L+ObyyJE9WjsmsC2FB79URWjnj3sZ9qu4PYCEpLE50h/XBtH0XLJYysb0Ft
yWPiCLGtBSPhbCjt33n4MrGxXYH22Sg2HnF9vHGU+HVTwsZLsWwkGHLnyhP7
LuF6yxvHRpNhScRC4vWmp42SEtiQlFw+NrKKhty3u7Y+uM7GHQfhPUXE7tNv
q9eksvFAftGeW8Ty2mvMX6SzcTRHuDOSeOD0zfrNt9mol3UbOkN86zHvrpq7
bLyvXOF/iNieE9BidZ/sfw3idxKvlB/d0/GAjU8NgmqbiFud7KnOj9hYreW2
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
a3Tv1yrNHIXWhscvKMT818up2x6OQuKBmV0N8biVemBD9ihU9D87vSZ+UjFX
1fl0FKki9Y8yiK8GeZxwziPrefUpJ5n4pG77suGCUXh6c8VfIVbPzTrwvXgU
8Sw7ofPEvEeXcQWWjMIghe/LceIxyYAsrnej+LYkcYMLce5/ll8EKkYRGu47
sYs4ZufL68lVo2jPi3QzJT6xUGaT+AcynonaLZuJVQO+R6o0kvXg7NLSJF68
4ZD682ayvg3GRsrEI+M1rTpto/BbWl8gQ5ztki6+lT6Kmb/zGlcSR4stKK/r
HEVp9b4zy4g9qKfcrbtHIS+8N4CX2Dyug6+jdxTmvNHDC4mVzU3yDw2Q8WwP
L55HzMP92I7NHIXbecrHWdLfD79Z+efE0CiydBaF/yKu8Qm+95VD4mXd06Ap
4odaI2b+Y6N4w2/b+YM4anTP+Nz4KBinYq5/I3bPfPNf5OdRaP/qK/xCbHZI
UY//2yhO7x9Y/5lYcXV8T+IPsl/qkismiBe0TYeJTo1CRFxhzydidsxh5YyZ
UTQ3hn8eJ67a1tio9GcUP4bqx//5wZyO99M58v/80eb/vh/x6u5q7XljkBva
wf3veUe9l7wrmT8Gb+G7ov/et23NucMmPGOoMBWO+zceheGeRbWLx/BKxMj5
33gXZJg9teIbw0/trKv/5sN2yLOhCYxB2rhr1b/5VgmJTTsuH4Nt96FfM8SZ
TeG3mSvGcDkxbOO/9bq67vfBu6vGYHe3WP7fevpe95Y4KDKG8cki33/r7Twz
2i0iPgYO5c66/+/HIdebNEniM+l7/+3X+vLOA4kyY4hZ3NT9bz/FFa3FdsuP
4QzNsU6MeGLcKK1WZQyhM3Jt/+Khw/qlfaT6GEaqs0b/xUtZkYbIFs0xLC0Q
PapLnBQkcePNhjEIUo9fMCMOGkiy89cdg0ZIgvBuYvdtfMI6G8dwSXvzcnti
ff5fyc+MxmCf/U7ck1j2zFlbT5MxrO7pVvf5F+/UESGVbWOIXbDqRghx782O
xHs7xrCpYN2F68SX1F8kJNuOod97/8Hqf+cnfo31nv1jSIyaUWkn3vc9c9nS
A2NQ1PYy7ydWeZMYd9l5DDSB5Au/iJsszlwNPDGGqv/WX9cm5/3lM85OvVNj
6LOo79pKnLHCme/H6TE8/fvuxF5i765dMad8yH4IBLudIxY5oR7tEjqGxWP3
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwA2IQ7ZX64uKBl6F2DGDwwb65sbuiS7LFnhHKTyl5L9kp
OQXO55jiufDDxyX2MPUJRnZfpDlWweW3XzByd5dbb88E5d/6arW/mHcTXH1E
851bh7u3wNXnbyzWnfFlJ5z/acK1E4yM++H8EweP7T9vcwjOz6z05I18cwRu
3kFOo/9rco/D+csWH/knpXoKzncQ27soeN0ZOF/3+J0dx7TOw/lXHILfrXx3
AW5+Dlf2pasGl+D80zfC9/L1XYbzg90iHj55cgXON1vQHb5A5RrcvAf/Jl/J
qL8O5z/1PL9Y7PANOH/DzPuVFxVvwflLO5g7Natuw/lfk6Nepe2+Azef26Ut
aKP4Pbh8jcBTnocx9+F8nn3aDNd9H8D5tmX+fw//QvDnLOlZrDznIZwfF2py
ltP7kf2//yDw3n7r1dTJ+749sv8P5Vue2cD0bNpjOF/BNe3rZJcncP2mJqYT
tzx7Atd//1PvycWtT+H8N8aBrZJGz+D61V7rvmK8jOAfUSm9VND4HG5e/5Wr
yUEqL+D898EHJjIdQfA3hYo6Wxa+hOtffLZ57iOhV3D+9+Mx1UKHEPwHE/d/
Fch7Ded/u2gt2cT3Bs4vmKJ0oHLPG7h7xc8qCTyJewvnB19d80fmH4L/KX5h
zp1V7+z/Qvn7E9a38vm8h8trO8Tasi9D8KfLc38F0TA+AGfslHY=
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0., 1.0000000000000004`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ud\"", "\"dd\"", "\"uu\"", "\"du\"", "\"sum\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6834021273254023`*^9, 3.6834022068285*^9}, 
   3.6834022985972137`*^9, 3.6834046389669704`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}], "[", "t", "]"}], "/.", "solsq"}], 
       "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"4", ",", "4"}], "]"}], "[", "t", "]"}], "/.", "solsq"}], 
       "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", "solsq"}], 
       "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"3", ",", "3"}], "]"}], "[", "t", "]"}], "/.", "solsq"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1.1", ",", "0.11"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sol", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Rho]", "'"}], "[", "t", "]"}], "==", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
                "\[Sigma]1m"}], "+", 
               RowBox[{"\[Gamma]12", " ", 
                RowBox[{
                 RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
                 "\[Sigma]2m"}]}], "+", 
               RowBox[{"\[Gamma]12", " ", 
                RowBox[{
                 RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
                 "\[Sigma]1m"}]}], "+", 
               RowBox[{
                RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
                "\[Sigma]2m"}]}], ")"}], "+", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sigma]1p", ".", "\[Sigma]1m", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}]}], "+", 
               RowBox[{"\[Gamma]12", " ", 
                RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
                 RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
               RowBox[{"\[Gamma]12", " ", 
                RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
                 RowBox[{"\[Rho]", "[", "t", "]"}]}]}], "+", 
               RowBox[{"\[Sigma]2p", ".", "\[Sigma]2m", ".", 
                RowBox[{"\[Rho]", "[", "t", "]"}]}]}], ")"}], "-", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Sigma]1m", ".", 
                 RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}], "+", 
                RowBox[{"\[Gamma]12", " ", 
                 RowBox[{"\[Sigma]1m", ".", 
                  RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], 
                "+", 
                RowBox[{"\[Gamma]12", " ", 
                 RowBox[{"\[Sigma]2m", ".", 
                  RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p"}]}], 
                "+", 
                RowBox[{"\[Sigma]2m", ".", 
                 RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p"}]}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{"I", " ", "\[CapitalLambda]21", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Sigma]1p", ".", "\[Sigma]2m", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]1p", ".", 
              "\[Sigma]2m"}]}], ")"}]}], "-", 
          RowBox[{"I", " ", "\[CapitalLambda]21", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Sigma]2p", ".", "\[Sigma]1m", ".", 
              RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"\[Rho]", "[", "t", "]"}], ".", "\[Sigma]2p", ".", 
              "\[Sigma]1m"}]}], ")"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"\[Rho]", "[", "0", "]"}], "\[Equal]", "init"}]}], "}"}], 
      ",", "slnn", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6807939847939663`*^9, 3.6807939850679803`*^9}, 
   3.680794025638462*^9, {3.680794142660411*^9, 3.6807943133257227`*^9}, {
   3.6808228706231623`*^9, 3.6808229856284294`*^9}, 3.680823129308439*^9, 
   3.680827096023363*^9, {3.6808272416542625`*^9, 3.6808272564761415`*^9}, 
   3.6808276725784163`*^9, {3.680872978554659*^9, 3.6808729800041275`*^9}, {
   3.6808736332396708`*^9, 3.680873646233997*^9}, {3.683552488998685*^9, 
   3.683552492016716*^9}, {3.683552681938797*^9, 3.683552688625552*^9}, {
   3.6835588917315273`*^9, 3.6835589152330046`*^9}, {3.6835589538075247`*^9, 
   3.6835589582530966`*^9}, 3.683559000652608*^9, {3.685914821816847*^9, 
   3.685914822285925*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"2", ",", "2"}], "]"}], "[", "t", "]"}], "/.", "sol"}], 
         "]"}], "+", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"4", ",", "4"}], "]"}], "[", "t", "]"}], "/.", "sol"}], 
         "]"}]}], ",", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", "sol"}], 
         "]"}], "+", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"2", ",", "2"}], "]"}], "[", "t", "]"}], "/.", "sol"}], 
         "]"}]}], ",", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", "sol"}], 
         "]"}], "+", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"3", ",", "3"}], "]"}], "[", "t", "]"}], "/.", "sol"}], 
         "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "5"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(P\), \(b2\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(e1\)]\)\>\"", ",", "\"\<Pe2\>\""}], 
       "}"}]}]}], "]"}], "/.", "sol"}], 
  RowBox[{"(*", 
   RowBox[{"b2", " ", "prob"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.68082642694718*^9, 3.680826571328481*^9}, {
   3.680826625793082*^9, 3.6808266899939137`*^9}, {3.6808267429607196`*^9, 
   3.6808267668837996`*^9}, {3.6808274688720636`*^9, 
   3.6808274700887156`*^9}, {3.6808276456043425`*^9, 3.6808276461415777`*^9}, 
   3.6808276971750183`*^9, {3.6808861993434663`*^9, 3.680886222076191*^9}, {
   3.680886315197986*^9, 3.680886315328973*^9}, {3.680886349002304*^9, 
   3.6808863496741004`*^9}, {3.6808871262017803`*^9, 
   3.6808871881247387`*^9}, {3.6811418765894575`*^9, 3.681141886089611*^9}, 
   3.6811419268675704`*^9, 3.6811419988491387`*^9, {3.683401740383791*^9, 
   3.683401754637169*^9}, {3.683471157716803*^9, 3.6834711700752783`*^9}, {
   3.683552387767548*^9, 3.683552398927002*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{GraphicsBox[{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
VDpSOpVWLFIhkctNFNd9KqWDdekA7bYqiRziouq1J4WoR8r59J7txPp+9FbP
t3Scsbj9/PguElngh2OS92OCP3sDL2ZrkchiD1+JXb5JR6FlvPrmfSSy1Iv5
RiULgldoeQJhZBL5zmLb3zxjOnZYtzXxHSKRc59lH8zWpcOWOZLgdJhEHuBP
a3y/h473NiL32w1IZIcrdnXx6kT9sxVP6huRyMu7MrqblAn+tdfZmHaSRDZJ
fXZRYxNR/zyzcXlTEln5xIoVhRvoiJbwqXtwlkQmh0glexPjkb1ff7SfJ5F7
XvevvKBAh8HVuudal0hkuwNx0Sc30xHzbNo6zIJEnpGVtj2nSsdY8oZDw9dI
5KgXlAUOu+k41nJU9oQNiezWdyPDR4eOWNKtmUR7EnnTk9cJQcfomFKMbF7k
TMS7cIr/8Xk6ThwvSLW6SSJfHuw9aGpHR5wrN+ifK4mcJFEvx/Uk4hEl4SDr
TryHruuy3UF0nCrU1r93j1hf8IWM/Cc6EriWCq1eJPLjpvc2YVl0kCQCFuz2
Je7rWevqUUdHokVHxsAz4n2qyrR2LCT065lg2LFAEnk/za65Up6Bs8lbXRKC
SeQvDjUrnYjuLki6r2wZQSKb7fTdo+vBwMUombdNn0hkrRUjb5smGUgt0Luz
8wuJ7OGr5aO6htArruOp4EQS+Yjih4CAPUz83vN3ydGfJLKt64fRZneCF5sv
eebkEvvr3/TdMsaE1fyTs2sLSOTaHFepHeIsZG9K2ulWTCKHy9lsP6zKgs1t
Ek+9kkSWWNv/SsmShdxIpf8Ca0jkgv59avmeLEgWnPjEqSeRfYX3qS4IIfRu
xfsLn9pI5NS7TOvVOSxI7flPi6+LRPbaFvXyv2oWHK8MrrzUQyIHJrWJVVNY
KPBbPZRFI5GfPQsvlR5kYW2STqUUi0Quch/gxcyx4NJkk3CbSyJTo2cenlz8
P4rNO57q/4vj7sB1l3ullBXpK0qSljTeJ0mEirIayqgkKSsNFaIyQhpGRaGM
hERWycpIGhKSVJT7udISRUa/8/vzPD738/68z3qe1/Eo5M3E+dPN3/F7XjdM
Zsr3EVXNUud5vyRg45zNHbLKfcTXsntl5G/0bwnrDx95+cSXrSQekYB6s6eR
Kpp9RO2q/p814xLwq/iT0EAL9/nqLa9SJGjA7Xz33RHtpr7g3H8MGnjz7bdf
xN/PlLsdsU2aBututrR34HlHl77aU8KmQdX62ZsMUH+92Dm6egqfBhxPU6XC
yX1E86yGmo+QBoa2WpkOXORprvnYc3ka0JlOuvNRnzW3+rTrTKXB6V1hqWaD
uH9OXCkIU6LBk+m52nc/i8nJ/2pielVpMHzV6YX/azFptej3WD2DBsaST2Pz
qsVEx1fe7Pp/NNAN/5rlmScm7VWutC06NIiRjt38PPT/eq5D8fg8GpTb7ppk
cFBMpCs3LLyuj/bu1OU3HcRk8SPDPb0GNBgcuX2/W1tMLpYJmrzX0KCr12p0
K+6/2Yaney+Z0iDl8/lvdrhPVJeM/is2p4Et+E0VRFJkoKhX/58VDTRpu+Yq
2FBkQ8GD+AhHGoja20t0KRHZvUA/P8eJBu/k4/8WN4nIifz0xpeuNDhsJv+2
4p6IZOfFTijso0FJv3F2WhDqw3msqcs80d/y3Ibbe0Xkbc7x+Y5eNKjY9Vz1
rLWIsO+4uab54/mtjuX8WSIyQ6freN1RGhRv3TK/S05Elt7eFNd3nAbhUQdi
m/5h/85uyOMF0UDjwlWT/q+9xC1z5RO9EBpM+dSwxexdLwnUKujZdIYGq+ze
nvnV1Evi0rXHD4XTYF+TzOjvR70kRzN5SuI5GgSX+eU73usltTfl9R7G0GBO
Z/K1RRm9pGtmuNmHCzQgT981hiT1kqHUf86MOBpI6Mv1W1/uJVwNvwDNRMx3
A/v0reheMjOl75LZNRpE1liuDQ3vJcvVd+Z6XKeBx90PlT+Rv5uuv66PTqVB
gVZG89cQ5Ol08+78WzToEdKnH0M7OKli9HUmDQwMfVLjQ3tJosriySPZNGin
9V5YfbaX3L16W1c5jwbmiV8UjkSiPlZSNyX3aHBI+1rbwthe8iHxspPzfRrc
815UcSChlwxP4x4LLaFB7bYm3xkpvUQ2IehixgMamBmQqWuye4nm1D93Gh/R
YP3EL05TUS9ZGedR962KBi1Cqcqcml5iO6X7g7AW69/zdmxXcy/Zf8nu78IG
GkgKLTkbunvJ1QtGc489p8FTFevphUzkk1yxSVIzxmPxTL8IBRFpPD93Z+Vr
Gizdd2HMaY6I/I2eekG6kwYbX3ouqLURETnZqOzZ72mw8P2o71wPEdGOYtRa
dtNgosEyau0p5GPkt+ELFA1Wr3ZXWoX1VHi2xlFtiAbPDnlO+axAkYx1jVPP
DGM/RSbeyVlAkURuc/PXURo4qyhPOrKBIoEx703K6HRoSJPzuXaaIj7WvRIz
pOigeMQ4uPwG8lD+a+lZGTpcmBrY6vmAIhbxf3VtBXQo3pd9VPiDImQLTfxg
Eh3WFNWLnrHERF+ZlaqhQAfzDStM7qmJicL1yQo/VegQEF1/Lgb3a7az8ks7
dToctPGT3+4sJmMaGhHlM+ngnbae8cdPTLrT9f5FzKHD1PaVsSa4b7/eu6Rk
QJcOh7eJMjsyxKR+zkofB306jEULFf7cF5PSr8ZzKxbRgV2Z6RGNPLiTay7S
XEoH+2lFsvHPxOS6l/WNc8vp0H5MhSbVLiaxCxy2DhI6GPr+K3v5XkxCh3ZM
3rqaDs6Z1b8HkTeHi3Y/rzShw5Ivfi/39onJviP7w7TW0WFi9tyWuV/FxHGZ
7+poSzrUJXctgm9isnH86PjQRjpsmD524Do+X/0oqGjbZvTnuLW81RfkS9BZ
r2o7OkCuynNbEfJtdfSc2VvpoOvKO3wfea8keflzjCMddo4UBPt3iAm/7mry
Hyc6lOYWPE19KSa0sFQHx134/jpdhzV1YjK4LmvSYzc6vGDAArcy1Nvcu01z
POhwNPjkgCLq6zfPis7EHqDDRuPZ2zySUc/FlK8a8aaD8qbKdI9oMSm3fjy6
4xDGb/66U7onxCSttfnA3ON0EJq2hq5GvRcX/0b7YiAdBgILQypWi3Hv+9Dz
9xQdnt0yULfWFZMDXV/t6sMxPqWXFQQ01Ie9LHCJp8O16mzDvGSKzM2Q/dtw
hQ713No/gVhPau5TCvSS6ZCnUe2rt58ikt80tCZu0uFUYtiMyziPh3Nnd7tm
0uH7j07rINyX+7zmX23MpkOyz8z2AhZFXgytFCTco4POhcmjW9tFpLpozZN/
9+lg/XHaIlqliNw/YhGyu5QOvuvs4qyzROTKuMPwgko6qHgP3LM5KSJRj3bm
J9bQ4WPoWpH+PhEJDNrjQaunw4clPrWT7JHPkn4fnj2jg6Tg3LrZi0REcXpD
2+hLOnTNWWxySlNEnhmoPNd6TQelmW3ZI1NFJNjaq9amnQ59CcO/47kistjj
8cPgt3SwmFdo60HD/T10WmFuFx2m31ySFfAH9Vvy/uzOj5hvl/tpL7/1EuuS
ylSZz3QwnXOwz1vUS6ReTb6ymKJDRNQ9190fe0lp/95Yly904IpqO3I7e4mn
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
           "]]}, Annotation[#, "Charting`Private`Tag$3460#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
CQ3PNrFmhs6qg+zS5MhyOQ2jbXdF1SDha8UVI92XNDSP/8BsXUf06bNQWUgj
Od+rhsy8nXVQUB20v7OJhjY3hg7ZEH3kKdynsrSVhmkD3b4nD9WBmsQt5847
sj+12mj7CcJjmdN6pQ80bL1r/eXlmToIqLft39VN6ivySPb70DrQfQVXn3+m
YfXRc28jzteBvHGO+bRvNNz30cFMeK4OjjdNawzto+GrgLzclJA6mPVW/XD3
LxpuXnHykFZwHbS08SeuHKJh/mtJ9dIAos86qIUZfwkPduq4axJ9bfnh9xaW
ghI2elTeK9xSBx8/fh72oirhpH9zzaYTfxv7qS1RRFfCuRS7iYfn1cHS3heL
DFlKOPVw/KrSqXXQ96269QJXCf9riBOMFdTBrb6iE70CJTSzM98YPiiHtb8e
aK9RVcJBeeYDaJPDv98p5dnjlVDVw8B8TZUcto5EUPdrKqHs8/o/PWFyYCmc
vCPXUcJLbtlaT7zkkE8JXGYyVQmtfytcd1wlh3GMbaF9M5Xw1qfqqcl0OcjG
GLIPzFPC/DHdL/y/Sol+2duTsFAJf1X8WqyUKYXs6uzqClBC9UUe5md2SeFi
sMkZgQ057w/pqwVvJfCvwd/VYqUSTpjkweu9LoG9Jo/R2U4Jqy+7iIOcJGDX
ZT5yz4HEc/TCX/UGMRTj4eb6jUq43+jpyRtxYjBMKCgY2qSE/R213LYtYmCv
XXhw+Q4llM/xUvb/KIKjmcc2+Loq4ZeCeoH+IxF8opWaXt2lhFoTrRe6HBOB
sMDqW4e3Ep4eNtMepymC+aqnJcx9Slj+yi+tjfA207fq3mx/JZz4+1+kXEj0
Zq1SuNMBJXRvVduvfFcIYXrLPY8fVkKvrnZpyhmih46dt0kNUsLauKHN5buF
4Pm6dor4uBLyFp87dMBOCK9N2dSfp5Rw2gLW4EszIayItHs38awS5q61GfNT
Vwj5HyNL8Ty576UVrs3Eb06zlt3wiFBCvprRsjjC69hEQfDFiyQ/6slPjBWF
QP+9bkvuZSX82SO7nDZCeLzuimVLjBLG6xxJ+UvGXfdeqlGvKWFqw9lIQwrh
P13tl0GCEpqI4tNNWEJ4ttPpxdokJezyPTxmdJwQ5hZde3TolhJusUroOzdV
CHfGNV1KuqOEFwY2uRZaEj23X933WZoSLn2+7txpeyGcEW6z+5KphHvMpj2u
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
5ycDTy6uUFHf6dMjAopfscMmby7izF1jtnaLQC/kauE5Xy5etr+vXknGS6/4
6ub6kXwdTQ1L+UT02J3l4Z2BXHwZXjvzTy/hV652n8phLr5p799Q3ieCO8+H
NmMQiTektbiP6Leqxvpy3+NcbBuern5egcTffc/gxikuKvVbaR5lioH258xl
0RkuJvseNS8ZS94ntvPQUCgXowpvz1mpJYalGhYu0yO4WKwf8YFvSPT5LEGt
40WS71qH1fT5Yki1r7j2Xwy5fz3REZvN5H3ZmaDQEcfF2U+tj/p5iaHLL9BT
kMDFyhifjIvBJL8x+pZ7b3HRlXn1sGOKGO6+Dm/Uzyb5WtI2jUH8cbrLerX4
ai4+Mgie+CpHAjX+hsdrhFxM4RbyntdKoPu0UteAhIt313mH7miXwPS7ebnr
X3LR5m5g/XyOFFbkRU0OaeSi6SOp9UYdKXjW7Dn7sImLm3Y25taYSSHjk/pG
7jsuCnq2d/tvk4JwuL94wXuyvwMtN5Tw7hNHOsXrIxezhvv9H56QAksz7cK1
T1xkTF0wrvWSFGYYn+x/3stFmu6epVTCv1W4eduv71xUfPohf8x9KXitM63S
6+eiU6y31WiBFMJd2YYOv7n4hRf0/CnRk5kB76+c/MNFx10H7ZeRfhSeeTqc
PcJFeq7p8IU3ZP+rsW5vFXjI6yr4G/GO7J+2T8Sm8TDsHv3pgm4pzMxfMWe+
Mg8904fVrvVKwa5WJ8GTxUOLwkdKN35IwafpDyWOy0N5x5UYm34pXPj8wuuZ
gIc1yzYNRf+SQtbfrPqfY3k4mOTOO03GYu65+brjebj1hmXjePL7L5o7bq+d
xMPPf1e4OZD1OLMtWScm81BcZlNqRvYztFLxv6/Nw7vrN6ZVfyT7O3x606zH
w+1bpjN4JF4ft0or1jQevsvc+opHznMhMDHDcgYPPU6HP6yTSeH+2QMqHrN4
eFvc/HYnyceXhdtDzs7m4TKbmlZqIVm/f+nPlDk8PKDcoHmF5DPTVfVV+zwe
zux/onHnMsnPxL/LRhfycFG8TQ6GSMGgrvPJZOShdsNG2V8/KaTDf9e22PCw
3+Xybq69FLoH4plHVvLwkcZxw5CFUpiWHXI0zo6HS1aYzNxoIIW7Gg7bXjrw
UJR4TGWzohTuDH3XWrODh+NmTnWoz5LA+4evo3xcebg8anSeQZwE9DzLFCN2
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
           "]]}, Annotation[#, "Charting`Private`Tag$3460#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
MTRd6L5B+F55oADnGud2pfJ2IfrJ1eRD8Xn4dS1K8p90F5JfmE7euP4X/CVq
t6s0uhAp+UQe4pkIuEDt0WzdhcfL4iPLt/6ALjM5tv9dFwK6hiQXqlPgKGZU
O/W9CwqOybVv3iRhLJ5tfi2/C/Q7Rr78+C8R+ofyuXZ0dEGyaX9pWWEc6sKs
sXupC9wqdqqK23/g4l6+e/zs3SiQ0Lv1ajwalOn5TuR4N3yORpIjbKIgtNM1
SepqN+QHT3sGBH/DZ4/jpMt3uzHKX1+afucbmDY61lRdu1G9amMnWfUNbg5e
Arc/dePKhpsOFykKs1PnFMzTuvGxt52j0e07ZW6NP7Cv60b9EZm5ryU/0Nz3
OeDFWDfmXiwcCYmOh+AJwY5S6h5YXWv7oMf1C11j65PKbD2YKjl19BdrMkJ+
ELcR9lP2m8u6ZnRScdMkYbfusR6oOZzdMTn4BzsFXgp1S/Vg7oeyoV9qJsrP
+590vdKDpforJ5s8/+K1TrjkfrUeXAy1SFn3ywO1X6bCLcsesN86q9L5sRD5
P0turD7pwUnpjIu0BsVwLWvU/vSyB7x2TlaQKqX4OrJpcxjF9+pl+hB5K5HJ
vWrtEN8DzxPvd3kLVcNBYrvjnowe/CI8YKY7X4vZhwKe6vU9IJI3Zs/LNmC8
QzO2jroX1eVUxotfmxC/bJxkxdoLNsfOsNwMEsx222Qy8/RC7tUgl0NNMwau
vSu/dqYXvjFlrwiTrfhmGlw/JteLmDImD6/lNtzxiG55q9ILn4JPk3fW29GR
nTdSZtqLjl96eRWTnfhMqpq+/7gXosme7WHtXdCZbVmme9GLHp4yNp5/3eBk
GaL67t2L56K7qGSUKXkendtx+XMvErSldzqn9iDgCtWu/pheOF9Q4pvc3QtV
I2Yu99ReCIst3bxs0wuWZ9wCAvm9uDTzXUy4hHKuEKGj+dW9UAq0Htfl6MO7
tNNihq29CFYaivLX68PVejnpzcFeOM2Ysvp/7gM9WUUubLYX/vf4Fg4R+lC8
XV/x/FYvbi3ohfPT9sP9oPnNdsY+HD52XVTneD9k4aDrvK8PgS9OL/5U6cem
nocRl2AfLv6c/UBn1o8cBz/zTLE+yNgwid5w6odzQJit9oU+fNhYnXJx74fU
r3inRaU+BBwS/ujr0Y/FiowXQdp9mDX6murp0o+0weK3p036oDMVc8f6YT/s
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
+MSpAQa+fyjLeEHB7xO9y2SvNECCd1Z5O5/sH820s6AT/T+f+XhURMHfee6K
jWv4YPb94GOlJlKPzTUulEg+dHktfLLxLQXL1iznuk0RgKHXk6fV/5Hfsydb
a6wQQv3Bl89z/lIwJf5aq/4DMaTqm1TWS1HxW87dxpXjYvD5mlT5mULF9YWj
v3tJ/SoddK5SZ1JxRUZDadF+CfTqPa9azqGi3u1tL0KiJPD4i2a1I4+K2Syj
B3I5EnA90Fsdp0TFI8YOC/71SMBYz+bFg+lUPDa+r89YthHoX3JfiFSoeNqK
Ptwwk/TnPYWaLzOpGBXSPv/OkkbI8zxcQ9ekovfX0ZslhI+ndJtrZmtTcXaD
3P6evY2wtW9p7UodKhYx1+6fE0T0yL3U2l36xN6d4OtO5vXx/RO1IfPJeZU5
FxNIf4t1XOuuLqTijjbG2pxbjZDRW133yJiKbzaffZCW3whH7s6pf7mEirej
9D/uLW0E6/2R9QPLqPh0V3/Pr2eNoKLTX88BKqa9axvcXN0IAz22DborqXhw
eFP+0ZpGqLpT0LDGgopWf/DgXrJO8JjC32tFfm+zM20q+f3+uUH8sHVUVDY4
kZBI7jPraeWnbaBim35KcU9JI8jfWS4ot6NizrIeuUnEno/7rgvebqaiLXfB
hCqxt2gORTjiQPyrDds4lfhzrttNOMmJig9nO2QwiL87suqE852pKDo8+zyV
xGP+Pj2RzW4qdtI6Uqa5NULH/pne9/dSUWqnXvaJDY0QfXAyj+tBRd388Wuv
jBuh13fMTuxFRedAvtmzf4Rnh78PzfejYv6V1CUX30vAMrArNiaAik70E6bV
FRLIDOG/tguh4s3HlZ1fQiRgf/LZkYKTVLQOmeU7e7sEpE49nDr5NBXtS6ih
mxdJYGdEyvZX56lYaeGr7igRw9QrB95tTaTi85HwY7ZxIqiJ23WiOJmK+38H
/qxeLYLDiZtmTkujYsZ9s+LbI0JoTF22u+UmFbkX91R83y6E0PT5MqZ3qOi7
Yu2PYY4QDDI0M5OzSX0kf7S4XiWAqCzWJ6cCKqo/mYqKxgIwvTcR/riIise1
qNH7B/nQk/NDW7WUisMqN7eG5fMhIa+79vhjko/ERdNT/fhgUdDm0fGMivH3
2/yHF/NhuFDMgCoqrppOD6uW4kNGcdW99BqynjHz50phA2wsK14n1UBFJVFR
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
jvwPdgy5Kw==
           "]]}, Annotation[#, "Charting`Private`Tag$3460#3"]& ]}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0., 4.999999897959183}, {0, 1}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}],FormBox[
     FormBox[
      TemplateBox[{
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(b2\\)]\\)\"", 
        "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(e1\\)]\\)\"", "\"Pe2\""}, 
       "LineLegend", DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                  "]"}]}], "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], "}"}]], "Output",
 CellChangeTimes->{{3.6834017479274592`*^9, 3.6834017566073084`*^9}, {
   3.683471159060689*^9, 3.683471215428829*^9}, {3.6835523997132173`*^9, 
   3.6835524077742796`*^9}, 3.6835526935007377`*^9, 3.6835589912377462`*^9, 
   3.684077024979722*^9, 3.6859148689346423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", 
        "solsqetg2"}], "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}], "[", "t", "]"}], "/.", 
        "solsqetg2"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", "thetg2"}], 
       "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}], "[", "t", "]"}], "/.", "thetg2"}], 
       "]"}]}], ",", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", "solsqth2"}],
        "]"}], "+", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}], "[", "t", "]"}], "/.", "solsqth2"}],
        "]"}]}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "[", "t", "]"}], "/.", "solsqsx"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(P\), \(e1\)]\) & squeezed\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(P\), \(e1\)]\) & thermal\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(P\), \(e1\)]\) & squeezed & mix\>\"", ",", 
      "\"\<single & squeezed\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Red", ",", ",", "Dotted", ",", "Dashed"}], 
     "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<P\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Probability,r=0.5 (entangled)\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6884905870835*^9, 3.6884906756045976`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$4189#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
2m7KHPt/qQiIZQ==
          "]]}, Annotation[#, "Charting`Private`Tag$4189#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
FA1j/U6HJhBbptUH7HxGw8zWSO5Y4oF/FyKjEmmYmzMi8Jj42hZG4vBrGk6/
7kx6SMzv8TbDMIOGT3uK2wKJIwr3Fcbl0vBvW3d8ALHmol9V4wU05NnTMuJP
nLXXv3VfKQ2b1BIq57/fHaw5+IJDQ1cXw41BxA31JZMzdTRcf/2fegix/WI7
PrMWGlrG/w2ZH3/s2AJWcjsNxY+qes7Pzzv+mQp3Lw0Pxfn9mp8/q3f7Govf
NNzcOFA/v74XK9q2vR0l67/Qv2Z+/etdbxjxTdPw7effs2XEhRmyFse46JhS
NKHTSHxwKtsug4+Od9Tv/PpJ3AlHLgqJ0DFPylhwkvj87TFPGyYd313Z/FCQ
7E+w0LpocWU6pj1ewl5PrGxanXR6CR2jf9x0MyJ+G+aclb+SjlKvnl+3Ia5U
SKl13EL+n1roHU583GZP+5ftdPQ5fdQznfh3Qu9v2d101Bz1oKqIhbXUBcoP
0jG5/cReUXIeoy8VSikfpaPlaerqGuIVOdbqV07Qse0D968DxEZ6Mds1HOk4
J70sMorY95CUm5cPHctNLUq2kvMvE5lxpymAjtx0tRY74sTWgw/XhJDxfP2V
QohL7B+ktsbS8Wr94g1DxLzX+Lu2ZNPRTTNjdwbJv7CPCX+D80k84hpf9BGr
8ejT+oroyAdTqookf/UCvBaH19Cx6cQjt/vEnjHTJiMDdByOXIduJP/3r850
WTZMx4TzHI10YvlP5x9YT9CxL0NG/A9xdntfZeUCLjSM+TB4jtSTv2qN+1Lk
ufCldr3/eVKPrJPf7bXdz4WMPY5+yRTJLx2Xc08OcWH1ejlqjHiWvTyg1pIL
rQL1h3eQehfx+1mF7mkulN/gWPOduForeI+CJxeyFn9tkyf1c3uWo0HD/7hw
aGbrgSJSX4UNNU+LZHNhiNP9WnlSf1uauu7uyufCme4gaTdit2nLkvQKLhRc
2tm5nNTvN7BH/0EXF9oyxXRj6tmgWKSx01CSGx9Ujm59Qe4DWk0b5l7lRqli
QQ+tNnJ/9ObFXb3FjQf7CyoTiRfRnnBtusuNizYs5ij9YIP4iiOF70K5sdTl
RAWjncTXp0r/9RturF3of2uugw2GWwqMn3ZzYzVTd8VIDxsePntmedeUB1cr
v9bfNcQG9Qu2bgc1F+A56lvDJi4KOkcfHRL4wIvZfteYbuoUGHaduR7swodp
tesXZBhTYNwZtExenh81q1ZmJ1+goO+ztUdJigAWcbyaLUMpWClWL7fjmBDy
Cn6/LviO9FsweqJlWBg3v5fW/0xR5B23hC9jUhhtO8+ZaHJIP7XjaGogXQQ5
3gskHxAX7P40qSsigmH2u+v+q6TgqmnAw0RNEbQ4myM/UkVB/ym1L5dOiCD/
otgKRh0FFf5mS8Q4Iviof/qJXDMF+oMWY8pmolh2OJT1XzcF0RJeNTfNRfFQ
iI/8W+KRLUmvW46KYqFNXjtPDwWxvlN2YdaiyHtpKCaJeFIjqmGRsyhmaPR1
j/4k/ZX1t6whX1E0FYrJud5PgWjDMfe8fFGMOjaqbEn6y4YCG7rFcjH84lBS
fWSCgqHtTTLXV4nhdVaN/GPihZ/2rYvVEkNxqFjbQKz9cbNd90Yx7D5+P9Ns
koKQHFG2604xTD6Qt8Z4ioJ96bnhflZieEHrptj6GQqKnkus/hAkhh6vzmo3
0zjwXdXXoO2hGMYuu9HKoHNg9NmcNfcjMQw/GGxmRKz6tC/U4IkYMu0PJOYS
e0bnT9UliqGbblhnBBcHtj1yKP5VIIZNRwYf7uXhwLu7hVaKo2L4VeDFef+F
HEgwLJfyGRdDC+0NfQXEEYLV1YNTYph9tl5tgtgjqHVXDpc43g3+PmDDxwGj
8MmVh0TFUeyMet6mRRxof7l6zm+ZOI6A++0Gfg4IF0fFjJ0QR5lhLcN+IQ7Q
7z07YnVKHD339ETJkH59xPAV44u9OH7RoWUaEDdS732CncTx2avKnS+J4+ur
nVZcF8d7lntyjolwYHM3H54MF0fV9AfMIlEO2C642EZR4ugwM/b8NIMDMgql
X6eqxFFc0f5sIDG1UY6zpE4cef3buN4Razt8+eDZLI7+XYcT5oh5a5iR2j/F
cejp5apgCfK+iM0wi6Yz0F/QJPcNk7yPtoyXnVvHwF2ZcullkhwINzMqiNjA
wOTQ/9X3ERs5xWYVb2agRkZuBb8UB9Kf7k5Q2s7ALUUxaw2Jby96fKduLwMV
ng8PFRGrft2EOnYM/KfddyBTmgMnXa+9E4xgoLTFKclri8n8tL6/W/qEgQ4J
jodDifn/YsauWAbWWp1wek38xoX3vccLBrZzc2t0EE87P8gcSWPgrGRs5m5Z
DoQ5vcxpKWegzja7JEE5DpQ61HxKnmFgJtdhxmXyXoparl1QSpNA3qscZ39i
54Hwgm5uCXRNkkuII2Y5WH1W5JfAp1u3xJcTW5/tLQxhSeC/cXaTnAIZ7/Rc
sfsqCWzh0TicQ7zKbhlldEICTSpNe5sUyfk8reCUYiOB+jf1lAeJ/R0YosL2
EvjVYVRrjrjXZcqE4yiBq7O9K5WVOPDMvbzOxF0CK1/F/7Qjlgw+++3QIwm0
Oeyt20dcFHLsxvsICUytV62bIL7w6ICCVLQEavg6wCJlDlRFbTnRGC+Bsid/
RWoQ+70U6DqaJoHb2uovWRPP5SYNHGdLoFLmncJK4tSPMQGfKiXQXKm65Rux
ZcHDlcq1EnjGOondR5xVfM25o0kC5R14NvGocOB89Z6RUz8l8LjJyQ3riXt6
+qfOcDPRpvf2t0DisL7WqHJeJnauaPaKINYbrNFZzs9ETvAr7ufEcX9zbg6K
MrFSaCIwi/jojB+3szwTY8e0vrURc8SXC1zcxMSNMRePL1El+XnuXG/kViau
FZJcvJo4tTi1uACYeOGA37sNxPfd19wW3cXEPnjtu4vYqFt7JsmUibtetL2z
Js5Ft+ZqMyb+9Cl2OU28PDIra8KciZr7HISdiQX2b72kf4yJPwz4+tyJy7K2
/24/y8RxHu/locSbJbzYi5yYeG3q++8I4leOhUmrXZl4ablTSCzxPRV9+xtu
TLzN2nwriXh3gNEP6TtMrI/p6f1InNkT8BHvMrH9g877QmINXc4TOz8maiW2
nSol5h0zsXj3gIkRDUJ21cRfjh+u2R/NRCbPwYl24nU54W8vx5F4fbao6iaO
ZzYFRsczsbH9i28f8e0yS6OBVyR+9K1P/xCPqEZrMlKZ6JaSTRslPnmzlW/z
Wyba2yzfPk6su876i897Ep+4ZfazxGn3nz1LzWYi40aTMV2NA8q9nbfqPjDx
DeOjJA8xPdpum0ohE8UlHfYvInYeT5A1LGZiRrNZvgBxm2nfpHMZ2W/eTHFh
4vyF597nVTIxZNuSY+LEq61TQ7tqmDgSd/iIBHFs7u/zgl+ZGCatq80iFpVc
Y7q2iezf/vFRSeKbLq6rLb4xcXTnmXBp4l/l/xO+1cZET5qa3GJiK/XRgZcd
TDRaMuolS0x5aJdT3Uz0r0qpkCPe1nw5cbSXiRZf1o/JE6euz/KRHWTi/oQJ
bkViuaDJUzuGmCi2RXN43v59W/TODDMxWrmrUIl4Wu+68oN/TNxtZXhFmdgh
Jo+WOcHELYnPRVWIWybmvn+fZqLD001+8zY6uP3DAhoLzdV0euedk+oZuZyb
hRPvujVViXmNzGQe8bKQdo1pOm+TXo3HdH7iizTzeUd5T0o6CLGwcG3h1nn3
qLDD6kVZuLHXkzZvrU8xzO0SLEwK6H02///XrVxDkiRZ2Ja/TWPeJVN6DNZi
FjZ4evrOz5fxWDLYQ56FYews9vx6rLT7RPuVWPhs44I/8+tNrMkNNFNjoUjq
mREF4hHnQOH8JSxsXtH3dT5eIGwdoLmchfYrH0XOx9M3aZ1g6CoWjjPiYT7e
dbsX+s1psXDLeUahDPFZr+S7tZtYuO7oQsf5/ctQvLkQdFiY62r7kDl/fvJM
vBORhULBXI8ZxI/G/3nd0GehXnOTnghxe2gpV68hC+Wf9vUJEq9YG3XrgDEL
EwUEXPiJP5/bfnOJGfl+oa3cAmJhAYnZYHMWPnx8cQcX8ZGEbveZoyw0/HTG
YI6c59/tflerrVnoLqg6On/eF5vXX3R3ZuHT9RHs+XyxHU0Y6T7PQtWf/4bn
8+lt8LXzJpdZOPTNYXI+3/TZii7qN1ho8zD+ZRPxed2zDpV+LHQoPv+ghDiv
Vad/cyALBzw3fPpMvOi66JnnwSysXyhXk0cc8/6d3dXHZH/O7X2STly+nHZS
9SULb0x9K4omZpVV/7j/ioUHpXW4HxOfsHt+fCKFhVojaxUfEo/FGVpR6Szk
/vFzyptYRTL0iFsBC50bp7aeI75G19xf8Y2Mt8zRbx1xt55Ag/oPFlolN0qv
IN5/d+DYrU4WYkWPnxqxqshrJ+1+Fsr29cuwiCtk1wXGjrPQLfZQ3yipt/Ib
t1EXGJLY3ip+/g3x3WsKhzgsSbz6RdzoJfHfPNr3pTKSOBS4flE0cfHOz4Pf
FSXx4ALZ1X7Ezgd2CxmslMQRk98bbYgLHE2N5Awksexk1hYx4uVpa2svG5Hf
J3XY8M7fD6MSltX7JFHv5sILU+R+Oev+9azPIUn8Du56XcQSvpZ+f05K4u8r
Ge/eE9s+ty37ckMSi44J/jxMzN9ydbdjuiTu6PxVeYfcf9qXE4UC30vievEZ
jhvxCfGG6tfZknhlcHn2WeLM3ev/+5MvibNJf/aZENu+++1ygS2JA7tFbi0m
/nTfJvJqtyTyH+rhSyb3sdt241/eUlL4N/dH3gdyn8e3uP/v5WIpVDdx0k4l
5lxOciuRl8KMkZtR0cTqqXzc/GpSmLAxQ+smcY3MZ8mANVKou0nlJBCvHNmw
/aGhFK5u3DKbQ/qHrhdKITHuUqiq9O/OS9KPDNz+McHtIYWd8sJyIcR/reOO
2XtJoYQWRnsQ0xSUlq3xlcLNaX+tjhDLPFIsKHgkhYo9a5oXEe/3URjqSpPC
22F6lbak38m1kzNa3iuFaQ9cHMVIPxSyRJony0waNQ0WdC0j/ZallfrLDnNp
NCzepMCc779C1hoKW0pjZVq4wSzp39Ln9gadtJbGC/XHnCqJa+s9ZYWdpDFi
lD13nphxZ2DdybvSKDX9YHMmiwPBPz6eEsqRRomYLM31pD8MirAtPqEog749
JV+5xDlgEfIfJdgjg8KJ/y4rCXBgXO/5REzeYrThRPo2k/67o0vXrcBHFlMV
Y9Kvk/7/qc6axewTcnjDZPJpNXlPpNy5KGa3Qh7POVm0mZD3iI/ZyT3co/J4
Kcf7Qew3Cta3xCX6sBXwSuljyc/VFIQvjUxh71HEpidJ7uYlFNzMDwjfk6WI
3itKwzm5FOxdbPa8TFUJPa7n3N79loLtjsVHxe4pYbViJFq/oCBG1lq1YlQJ
x2XqXzpHUKD6+WWY8VFl9I5PDNcKpCBoRYFmdZ4y2ggdvCt7mwLbYZ6qUk0V
tJS1FeNzo8D67V/Fe4EquHThbblsBwocPA9MGz5QwZDFdaE+xBcPpH8VfKiC
vfUlQmbEd0cv3g8KU0Hlq5tmfp+lIHXTxNSjJyooOpLXqEY88Wmu/kWSCq6V
P+L94DQZv1owoLBYBf+6aabZ21IQ8eycvXepCvreiVPWJn52gdqxu1wFnYU4
wdzEGaygyXJKBYcDjV2jT1HQYsGwr6lTQafSpJW1NhRodEjvaO9QwYponydw
koLV6Vfl47tU8Krac34h4s13midO9ZD5l9+73GRNgZHGkze9fSq4jWeVyUVi
17OK8n/+qKC5qwhP0gkK3LfemkgbVsHqnU+c3YjvCLXXXhhVQdYOxredxOGv
n/mNj6sg50fiu7bjZL89eOyyJ1UwNeyzUipxkskpXfdpFdSMeh9wjThduUhu
26wKjl/znNhNnDesPjE3p4Lsj4qnWMT/B3bnZCc=
          "]]}, Annotation[#, "Charting`Private`Tag$4189#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small}]], 
         LineBox[CompressedData["
1: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
b4rwhzn5lY0NWTgZfWWM8P8AjP35tw==
          "]]}, Annotation[#, "Charting`Private`Tag$4189#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Gamma]t\"", TraditionalForm], 
       FormBox["\"P\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Probability,r=0.5 (entangled)\"", TraditionalForm], 
     PlotRange -> {{0, 10}, {0, 0.5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(e1\\)]\\) & squeezed\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(e1\\)]\\) & thermal\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(e1\\)]\\) & squeezed & mix\"", 
       "\"single & squeezed\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.68848471317912*^9, 3.6884847923863797`*^9, 3.688484827440362*^9, 
   3.6884880819442077`*^9, {3.6884881298127193`*^9, 3.6884881488041735`*^9}, 
   3.6884904242098064`*^9, {3.688490546339457*^9, 3.6884905689055605`*^9}, 
   3.688490620808217*^9, {3.6884906536118855`*^9, 3.6884906772507105`*^9}, 
   3.688490720179103*^9, 3.688490900998273*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[CapitalLambda]12"], "Input"],

Cell[BoxData["23.082541374162`"], "Output",
 CellChangeTimes->{3.688491690339874*^9}]
}, Open  ]]
},
WindowSize->{974, 559},
WindowMargins->{{Automatic, 7}, {Automatic, 82}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 122, 2, 31, "Input"],
Cell[683, 24, 24621, 653, 1272, "Input"],
Cell[25307, 679, 38782, 951, 1518, "Input"],
Cell[64092, 1632, 4981, 115, 212, "Input"],
Cell[CellGroupData[{
Cell[69098, 1751, 1993, 62, 92, "Input"],
Cell[71094, 1815, 86792, 1524, 238, "Output"]
}, Open  ]],
Cell[157901, 3342, 970, 31, 52, "Input"],
Cell[158874, 3375, 4147, 92, 192, "Input"],
Cell[CellGroupData[{
Cell[163046, 3471, 2675, 70, 132, "Input"],
Cell[165724, 3543, 168633, 2831, 142, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334394, 6379, 2535, 76, 132, "Input"],
Cell[336932, 6457, 54980, 985, 268, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391949, 7447, 44, 0, 31, "Input"],
Cell[391996, 7449, 85, 1, 31, "Output"]
}, Open  ]]
}
]
*)

