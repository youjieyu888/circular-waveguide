%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 842 596
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\youji\Desktop\fig4b.eps)
%%CreationDate: Fri Jan 18 13:52:07 2019
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 46/s46 put
Encoding 47/s47 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 52/s52 put
Encoding 53/s53 put
Encoding 54/s54 put
Encoding 56/s56 put
Encoding 61/s61 put
Encoding 114/s114 put
Encoding 116/s116 put
/BoundingBoxes 14 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s46 [0 -434 569 1854] def
/s47 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s53 [0 -434 1139 1854] def
/s54 [0 -434 1139 1854] def
/s56 [0 -434 1139 1854] def
/s61 [0 -434 1196 1854] def
/s114 [0 -434 682 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 14 dict def
 Metrics begin
/s32 569 def
/s46 569 def
/s47 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s52 1139 def
/s53 1139 def
/s54 1139 def
/s56 1139 def
/s61 1196 def
/s114 682 def
/s116 569 def
end
/CharProcs 14 dict def
CharProcs begin
/.notdef {} def
/s46 {
186 0 m
186 205 186 0 186 205 c
391 205 186 205 391 205 c
391 0 391 205 391 0 c
186 0 391 0 186 0 c
closepath } bind def
/s47 {
0 -25 m
425 1491 0 -25 425 1491 c
569 1491 425 1491 569 1491 c
145 -25 569 1491 145 -25 c
0 -25 145 -25 0 -25 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s52 {
662 0 m
662 351 662 0 662 351 c
26 351 662 351 26 351 c
26 516 26 351 26 516 c
695 1466 26 516 695 1466 c
842 1466 695 1466 842 1466 c
842 516 842 1466 842 516 c
1040 516 842 516 1040 516 c
1040 351 1040 516 1040 351 c
842 351 1040 351 842 351 c
842 0 842 351 842 0 c
662 0 842 0 662 0 c
closepath 662 516 m
662 1177 662 516 662 1177 c
203 516 662 1177 203 516 c
662 516 203 516 662 516 c
closepath } bind def
/s53 {
85 384 m
274 400 85 384 274 400 c
288 308 320.5 238.83 371.5 192.5 c
422.5 146.17 484 123 556 123 c
642.67 123 716 155.67 776 221 c
836 286.33 866 373 866 481 c
866 583.67 837.17 664.67 779.5 724 c
721.83 783.33 646.33 813 553 813 c
495 813 442.67 799.83 396 773.5 c
349.33 747.17 312.67 713 286 671 c
117 693 286 671 117 693 c
259 1446 117 693 259 1446 c
988 1446 259 1446 988 1446 c
988 1274 988 1446 988 1274 c
403 1274 988 1274 403 1274 c
324 880 403 1274 324 880 c
412 941.33 504.33 972 601 972 c
729 972 837 927.67 925 839 c
1013 750.33 1057 636.33 1057 497 c
1057 364.33 1018.33 249.67 941 153 c
847 34.33 718.67 -25 556 -25 c
422.67 -25 313.83 12.33 229.5 87 c
145.17 161.67 97 260.67 85 384 c
closepath } bind def
/s54 {
1019 1107 m
840 1093 1019 1107 840 1093 c
824 1163.67 801.33 1215 772 1247 c
723.33 1298.33 663.33 1324 592 1324 c
534.67 1324 484.33 1308 441 1276 c
384.33 1234.67 339.67 1174.33 307 1095 c
274.33 1015.67 257.33 902.67 256 756 c
299.33 822 352.33 871 415 903 c
477.67 935 543.33 951 612 951 c
732 951 834.17 906.83 918.5 818.5 c
1002.83 730.17 1045 616 1045 476 c
1045 384 1025.17 298.5 985.5 219.5 c
945.83 140.5 891.33 80 822 38 c
752.67 -4 674 -25 586 -25 c
436 -25 313.67 30.17 219 140.5 c
124.33 250.83 77 432.67 77 686 c
77 969.33 129.33 1175.33 234 1304 c
325.33 1416 448.33 1472 603 1472 c
718.33 1472 812.83 1439.67 886.5 1375 c
960.17 1310.33 1004.33 1221 1019 1107 c
closepath 284 475 m
284 413 297.17 353.67 323.5 297 c
349.83 240.33 386.67 197.17 434 167.5 c
481.33 137.83 531 123 583 123 c
659 123 724.33 153.67 779 215 c
833.67 276.33 861 359.67 861 465 c
861 566.33 834 646.17 780 704.5 c
726 762.83 658 792 576 792 c
494.67 792 425.67 762.83 369 704.5 c
312.33 646.17 284 569.67 284 475 c
closepath } bind def
/s56 {
362 795 m
287.33 822.33 232 861.33 196 912 c
160 962.67 142 1023.33 142 1094 c
142 1200.67 180.33 1290.33 257 1363 c
333.67 1435.67 435.67 1472 563 1472 c
691 1472 794 1434.83 872 1360.5 c
950 1286.17 989 1195.67 989 1089 c
989 1021 971.17 961.83 935.5 911.5 c
899.83 861.17 845.67 822.33 773 795 c
863 765.67 931.5 718.33 978.5 653 c
1025.5 587.67 1049 509.67 1049 419 c
1049 293.67 1004.67 188.33 916 103 c
827.33 17.67 710.67 -25 566 -25 c
421.33 -25 304.67 17.83 216 103.5 c
127.33 189.17 83 296 83 424 c
83 519.33 107.17 599.17 155.5 663.5 c
203.83 727.83 272.67 771.67 362 795 c
closepath 326 1100 m
326 1030.67 348.33 974 393 930 c
437.67 886 495.67 864 567 864 c
636.33 864 693.17 885.83 737.5 929.5 c
781.83 973.17 804 1026.67 804 1090 c
804 1156 781.17 1211.5 735.5 1256.5 c
689.83 1301.5 633 1324 565 1324 c
496.33 1324 439.33 1302 394 1258 c
348.67 1214 326 1161.33 326 1100 c
closepath 268 423 m
268 371.67 280.17 322 304.5 274 c
328.83 226 365 188.83 413 162.5 c
461 136.17 512.67 123 568 123 c
654 123 725 150.67 781 206 c
837 261.33 865 331.67 865 417 c
865 503.67 836.17 575.33 778.5 632 c
720.83 688.67 648.67 717 562 717 c
477.33 717 407.17 689 351.5 633 c
295.83 577 268 507 268 423 c
closepath } bind def
/s61 {
1082 862 m
114 862 1082 862 114 862 c
114 1030 114 862 114 1030 c
1082 1030 114 1030 1082 1030 c
1082 862 1082 1030 1082 862 c
closepath 1082 417 m
114 417 1082 417 114 417 c
114 585 114 417 114 585 c
1082 585 114 585 1082 585 c
1082 417 1082 585 1082 417 c
closepath } bind def
/s114 {
133 0 m
133 1062 133 0 133 1062 c
295 1062 133 1062 295 1062 c
295 901 295 1062 295 901 c
336.33 976.33 374.5 1026 409.5 1050 c
444.5 1074 483 1086 525 1086 c
585.67 1086 647.33 1066.67 710 1028 c
648 861 710 1028 648 861 c
604 887 560 900 516 900 c
476.67 900 441.33 888.17 410 864.5 c
378.67 840.83 356.33 808 343 766 c
323 702 313 632 313 556 c
313 0 313 556 313 0 c
133 0 313 0 133 0 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Times-New-Roman
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -223.00 def
/UnderlineThickness 100.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Times-New-Roman def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1164 -628 4190 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 98/s98 put
/BoundingBoxes 5 dict def
BoundingBoxes begin
/s32 [0 -443 512 1825] def
/s40 [0 -443 682 1825] def
/s41 [0 -443 682 1825] def
/s98 [-5 -443 1024 1825] def
end
/Metrics 5 dict def
 Metrics begin
/s32 512 def
/s40 682 def
/s41 682 def
/s98 1024 def
end
/CharProcs 5 dict def
CharProcs begin
/.notdef {} def
/s40 {
636 -401 m
636 -438 636 -401 636 -438 c
535.33 -387.33 451.33 -328 384 -260 c
288 -163.33 214 -49.33 162 82 c
110 213.33 84 349.67 84 491 c
84 697.67 135 886.17 237 1056.5 c
339 1226.83 472 1348.67 636 1422 c
636 1380 636 1422 636 1380 c
554 1334.67 486.67 1272.67 434 1194 c
381.33 1115.33 342 1015.67 316 895 c
290 774.33 277 648.33 277 517 c
277 374.33 288 244.67 310 128 c
327.33 36 348.33 -37.83 373 -93.5 c
397.67 -149.17 430.83 -202.67 472.5 -254 c
514.17 -305.33 568.67 -354.33 636 -401 c
closepath } bind def
/s41 {
46 1380 m
46 1422 46 1380 46 1422 c
147.33 1372 231.67 1313 299 1245 c
394.33 1147.67 468 1033.5 520 902.5 c
572 771.5 598 635 598 493 c
598 286.33 547.17 97.83 445.5 -72.5 c
343.83 -242.83 210.67 -364.67 46 -438 c
46 -401 46 -438 46 -401 c
128 -355 195.5 -292.83 248.5 -214.5 c
301.5 -136.17 340.83 -36.5 366.5 84.5 c
392.17 205.5 405 331.67 405 463 c
405 605 394 734.67 372 852 c
355.33 944 334.5 1017.67 309.5 1073 c
284.5 1128.33 251.33 1181.67 210 1233 c
168.67 1284.33 114 1333.33 46 1380 c
closepath } bind def
/s98 {
315 758 m
403.67 881.33 499.33 943 602 943 c
696 943 778 902.83 848 822.5 c
918 742.17 953 632.33 953 493 c
953 330.33 899 199.33 791 100 c
698.33 14.67 595 -28 481 -28 c
427.67 -28 373.5 -18.33 318.5 1 c
263.5 20.33 207.33 49.33 150 88 c
150 1037 150 88 150 1037 c
150 1141 147.5 1205 142.5 1229 c
137.5 1253 129.67 1269.33 119 1278 c
108.33 1286.67 95 1291 79 1291 c
60.33 1291 37 1285.67 9 1275 c
-5 1310 9 1275 -5 1310 c
270 1422 -5 1310 270 1422 c
315 1422 270 1422 315 1422 c
315 758 315 1422 315 758 c
closepath 315 694 m
315 146 315 694 315 146 c
349 112.67 384.17 87.5 420.5 70.5 c
456.83 53.5 494 45 532 45 c
592.67 45 649.17 78.33 701.5 145 c
753.83 211.67 780 308.67 780 436 c
780 553.33 753.83 643.5 701.5 706.5 c
649.17 769.5 589.67 801 523 801 c
487.67 801 452.33 792 417 774 c
390.33 760.67 356.33 734 315 694 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Times-New-Roman exch definefont pop
%%EndFont
%%BeginFont: /MC3_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 70/s70 put
Encoding 100/s100 put
Encoding 101/s101 put
Encoding 105/s105 put
Encoding 108/s108 put
Encoding 116/s116 put
Encoding 121/s121 put
/BoundingBoxes 9 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s70 [0 -434 1251 1854] def
/s100 [0 -434 1139 1854] def
/s101 [0 -434 1139 1854] def
/s105 [0 -434 455 1854] def
/s108 [0 -434 455 1854] def
/s116 [0 -434 569 1854] def
/s121 [0 -434 1024 1854] def
end
/Metrics 9 dict def
 Metrics begin
/s32 569 def
/s70 1251 def
/s100 1139 def
/s101 1139 def
/s105 455 def
/s108 455 def
/s116 569 def
/s121 1024 def
end
/CharProcs 9 dict def
CharProcs begin
/.notdef {} def
/s70 {
168 0 m
168 1466 168 0 168 1466 c
1157 1466 168 1466 1157 1466 c
1157 1293 1157 1466 1157 1293 c
362 1293 1157 1293 362 1293 c
362 839 362 1293 362 839 c
1050 839 362 839 1050 839 c
1050 666 1050 839 1050 666 c
362 666 1050 666 362 666 c
362 0 362 666 362 0 c
168 0 362 0 168 0 c
closepath } bind def
/s100 {
824 0 m
824 134 824 0 824 134 c
756.67 28.67 657.67 -24 527 -24 c
442.33 -24 364.5 -0.67 293.5 46 c
222.5 92.67 167.5 157.83 128.5 241.5 c
89.5 325.17 70 421.33 70 530 c
70 636 87.67 732.17 123 818.5 c
158.33 904.83 211.33 971 282 1017 c
352.67 1063 431.67 1086 519 1086 c
583 1086 640 1072.5 690 1045.5 c
740 1018.5 780.67 983.33 812 940 c
812 1466 812 940 812 1466 c
991 1466 812 1466 991 1466 c
991 0 991 1466 991 0 c
824 0 991 0 824 0 c
closepath 255 530 m
255 394 283.67 292.33 341 225 c
398.33 157.67 466 124 544 124 c
622.67 124 689.5 156.17 744.5 220.5 c
799.5 284.83 827 383 827 515 c
827 660.33 799 767 743 835 c
687 903 618 937 536 937 c
456 937 389.17 904.33 335.5 839 c
281.83 773.67 255 670.67 255 530 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s108 {
131 0 m
131 1466 131 0 131 1466 c
311 1466 131 1466 311 1466 c
311 0 311 1466 311 0 c
131 0 311 0 131 0 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
/s121 {
127 -409 m
107 -240 127 -409 107 -240 c
146.33 -250.67 180.67 -256 210 -256 c
250 -256 282 -249.33 306 -236 c
330 -222.67 349.67 -204 365 -180 c
376.33 -162 394.67 -117.33 420 -46 c
423.33 -36 428.67 -21.33 436 -2 c
33 1062 436 -2 33 1062 c
227 1062 33 1062 227 1062 c
448 447 227 1062 448 447 c
476.67 369 502.33 287 525 201 c
545.67 283.67 570.33 364.33 599 443 c
826 1062 599 443 826 1062 c
1006 1062 826 1062 1006 1062 c
602 -18 1006 1062 602 -18 c
558.67 -134.67 525 -215 501 -259 c
469 -318.33 432.33 -361.83 391 -389.5 c
349.67 -417.17 300.33 -431 243 -431 c
208.33 -431 169.67 -423.67 127 -409 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC4_Symbol
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -223.00 def
/UnderlineThickness 100.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC4_Symbol def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1 -450 2279 2059] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -450 512 2059] def
/s61556 [0 -450 0 2059] def
end
/Metrics 3 dict def
 Metrics begin
/s32 512 def
/s61556 0 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s61556 {
813 916 m
813 769 813 916 813 769 c
501 769 813 769 501 769 c
478.33 549.67 467 399.33 467 318 c
467 253.33 479.17 206.5 503.5 177.5 c
527.83 148.5 558.33 134 595 134 c
622.33 134 646 143.33 666 162 c
686 180.67 700.67 212.67 710 258 c
745 258 710 258 745 258 c
733.67 148.67 709.33 73.17 672 31.5 c
634.67 -10.17 591 -31 541 -31 c
488.33 -31 444.33 -7.17 409 40.5 c
373.67 88.17 356 173.33 356 296 c
356 392.67 368 550.33 392 769 c
298 769 392 769 298 769 c
244 769 201.67 759.17 171 739.5 c
140.33 719.83 110 682.67 80 628 c
43 628 80 628 43 628 c
91 756 134 836 172 868 c
210 900 264 916 334 916 c
813 916 334 916 813 916 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC4_Symbol exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 841.69 595.45 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.701465 0.700714 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.342151 -0 0 -0.34252 0 849.77] concat
gs
628 2069 m
3020 2069 l
7 sw
1 sj
1 scap
st
867 2069 m
867 2052 l
st
1346 2069 m
1346 2052 l
st
1824 2069 m
1824 2052 l
st
2302 2069 m
2302 2052 l
st
2781 2069 m
2781 2052 l
st
628 2069 m
628 2035 l
st
1106 2069 m
1106 2035 l
st
1585 2069 m
1585 2035 l
st
2063 2069 m
2063 2035 l
st
2542 2069 m
2542 2035 l
st
3020 2069 m
3020 2035 l
st
628 288 m
3020 288 l
st
867 288 m
867 305 l
st
1346 288 m
1346 305 l
st
1824 288 m
1824 305 l
st
2302 288 m
2302 305 l
st
2781 288 m
2781 305 l
st
628 288 m
628 322 l
st
1106 288 m
1106 322 l
st
1585 288 m
1585 322 l
st
2063 288 m
2063 322 l
st
2542 288 m
2542 322 l
st
3020 288 m
3020 322 l
st
628 2069 m
628 288 l
st
628 1891 m
645 1891 l
st
628 1535 m
645 1535 l
st
628 1179 m
645 1179 l
st
628 822 m
645 822 l
st
628 466 m
645 466 l
st
628 2069 m
662 2069 l
st
628 1713 m
662 1713 l
st
628 1357 m
662 1357 l
st
628 1000 m
662 1000 l
st
628 644 m
662 644 l
st
628 288 m
662 288 l
st
3020 2069 m
3020 288 l
st
3020 1891 m
3003 1891 l
st
3020 1535 m
3003 1535 l
st
3020 1179 m
3003 1179 l
st
3020 822 m
3003 822 l
st
3020 466 m
3003 466 l
st
3020 2069 m
2986 2069 l
st
3020 1713 m
2986 1713 l
st
3020 1357 m
2986 1357 l
st
3020 1000 m
2986 1000 l
st
3020 644 m
2986 644 l
st
3020 288 m
2986 288 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 598 -2192 m
(0)[59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 1046 -2192 m
(20)[59 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 1525 -2192 m
(40)[59 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 2003 -2192 m
(60)[59 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 2482 -2192 m
(80)[59 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 2930 -2192 m
(100)[59 59 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 440 -2101 m
(0.0)[59 29 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 440 -1745 m
(0.2)[59 29 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 440 -1389 m
(0.4)[59 29 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 440 -1032 m
(0.6)[59 29 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 440 -676 m
(0.8)[59 29 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 108 self 440 -320 m
(1.0)[59 29 59 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 628 288 2393 1782 np rectpath
/eocl cland
np exec
628 1551 m
632 1504 l
13 sw
st
638 1441 m
642 1394 l
st
648 1331 m
652 1285 l
st
657 1222 m
660 1175 l
st
665 1112 m
669 1065 l
st
674 1002 m
678 956 l
st
685 893 m
689 846 l
st
696 783 m
701 737 l
st
710 675 m
717 628 l
st
727 567 m
738 521 l
st
753 461 m
769 417 l
st
796 365 m
832 330 l
st
894 302 m
941 295 l
st
1004 290 m
1051 289 l
st
1114 288 m
1161 288 l
st
1224 288 m
1271 288 l
st
1334 288 m
1381 288 l
st
1444 288 m
1491 288 l
st
1554 288 m
1601 288 l
st
1664 288 m
1711 288 l
st
1774 288 m
1821 288 l
st
1884 288 m
1931 288 l
st
1994 288 m
2041 288 l
st
2104 288 m
2151 288 l
st
2214 288 m
2261 288 l
st
2324 288 m
2371 288 l
st
2434 288 m
2481 288 l
st
2544 288 m
2591 288 l
st
2654 288 m
2701 288 l
st
2764 288 m
2811 288 l
st
2874 288 m
2921 288 l
st
2984 288 m
3019 288 l
st
gr
gs
pathproc 628 288 2393 1782 np rectpath
/eocl cland
np exec
628 1907 m
629 1899 l
13 sw
1 0 0 rgb
st
639 1841 m
640 1833 l
st
649 1776 m
650 1768 l
st
658 1711 m
659 1703 l
st
667 1645 m
668 1637 l
st
675 1580 m
676 1572 l
st
684 1514 m
685 1506 l
st
693 1449 m
694 1441 l
st
701 1384 m
703 1376 l
st
711 1318 m
713 1310 l
st
721 1253 m
722 1245 l
st
732 1188 m
733 1180 l
st
743 1123 m
744 1115 l
st
754 1058 m
756 1050 l
st
767 993 m
769 985 l
st
781 929 m
783 921 l
st
795 864 m
797 856 l
st
812 800 m
814 792 l
st
831 737 m
834 729 l
st
852 675 m
855 668 l
st
876 614 m
879 607 l
st
904 556 m
908 549 l
st
937 499 m
941 493 l
st
977 448 m
982 442 l
st
1026 401 m
1032 396 l
st
1082 363 m
1089 360 l
st
1144 336 m
1152 334 l
st
1208 319 m
1216 317 l
st
1273 307 m
1281 306 l
st
1339 300 m
1347 299 l
st
1405 296 m
1413 295 l
st
1471 293 m
1479 292 l
st
1537 291 m
1545 291 l
st
1603 290 m
1611 290 l
st
1669 289 m
1677 289 l
st
1735 289 m
1743 289 l
st
1801 288 m
1809 288 l
st
1867 288 m
1875 288 l
st
1933 288 m
1941 288 l
st
1999 288 m
2007 288 l
st
2065 288 m
2073 288 l
st
2131 288 m
2139 288 l
st
2197 288 m
2205 288 l
st
2263 288 m
2271 288 l
st
2329 288 m
2337 288 l
st
2395 288 m
2403 288 l
st
2461 288 m
2469 288 l
st
2527 288 m
2535 288 l
st
2593 288 m
2601 288 l
st
2659 288 m
2667 288 l
st
2725 288 m
2733 288 l
st
2791 288 m
2799 288 l
st
2857 288 m
2865 288 l
st
2923 288 m
2931 288 l
st
2989 288 m
2997 288 l
st
gr
gs
pathproc 628 288 2393 1782 np rectpath
/eocl cland
np exec
628 1972 m
628 1972 m
652 1918 l
676 1857 l
700 1793 l
724 1728 l
748 1662 l
772 1596 l
795 1531 l
819 1468 l
843 1406 l
867 1346 l
891 1289 l
915 1234 l
939 1181 l
963 1131 l
987 1083 l
1011 1037 l
1035 994 l
1059 952 l
1082 914 l
1106 877 l
1130 842 l
1154 809 l
1178 778 l
1202 749 l
1226 721 l
1250 695 l
1274 671 l
1298 648 l
1322 626 l
1346 606 l
1370 587 l
1393 569 l
1417 552 l
1441 536 l
1465 521 l
1489 507 l
1513 493 l
1537 481 l
1561 469 l
1585 458 l
1609 448 l
1633 438 l
1657 429 l
1680 421 l
1704 413 l
1728 405 l
1752 398 l
1776 391 l
1800 385 l
1824 379 l
1848 374 l
1872 368 l
1896 363 l
1920 359 l
1944 355 l
1968 350 l
1991 347 l
2015 343 l
2039 340 l
2063 337 l
2087 334 l
2111 331 l
2135 328 l
2159 326 l
2183 324 l
2207 321 l
2231 319 l
2255 317 l
2278 316 l
2302 314 l
2326 312 l
2350 311 l
2374 310 l
2398 308 l
2422 307 l
2446 306 l
2470 305 l
2494 304 l
2518 303 l
2542 302 l
2566 301 l
2589 300 l
2613 299 l
2637 299 l
2661 298 l
2685 298 l
2709 297 l
2733 296 l
2757 296 l
2781 295 l
2805 295 l
2829 295 l
2853 294 l
2876 294 l
2900 293 l
2924 293 l
2948 293 l
2972 292 l
2996 292 l
3020 292 l
13 sw
0 0 1 rgb
st
gr
gs
1 -1 sc
/MC2_Times-New-Roman 148 self 218 -358 m
(\(b\))[48 73 48 ] xs
1 -1 sc
gr
gs
gs
1 -1 sc
329 -1326 tr
90 ro
/MC3_Arial 117 self 0 0 m
(Fidelity)[70 25 64 64 25 25 32 58 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 117 self 1767 -2386 m
(t/)[32 32 ] xs
1 -1 sc
1 -1 sc
/MC4_Symbol 117 self 1833 -2386 m
/s61556 48 xgls
1 -1 sc
gr
2470 1701 m
3023 1701 l
3023 2075 l
2470 2075 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
gs
2504 1760 m
2551 1760 l
13 sw
st
2614 1760 m
2661 1760 l
st
2724 1760 m
2735 1760 l
st
gr
gr
1 -1 sc
/MC1_Arial 104 self 2736 -1795 m
( r=0.5)[28 34 60 57 28 57 ] xs
1 -1 sc
gs
gs
2504 1888 m
2512 1888 l
13 sw
1 0 0 rgb
st
2570 1888 m
2578 1888 l
st
2636 1888 m
2644 1888 l
st
2702 1888 m
2710 1888 l
st
gr
gr
1 -1 sc
2736 -1923 m
( r=1)[28 34 60 57 ] xs
1 -1 sc
gs
gs
2504 2016 m
2736 2016 l
13 sw
0 0 1 rgb
st
gr
gr
1 -1 sc
2736 -2051 m
( r=1.5)[28 34 60 57 28 57 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
